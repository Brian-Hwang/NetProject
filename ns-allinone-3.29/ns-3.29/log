Test
PointToPointNetDevice:PointToPointNetDevice(0x558ca1a24000)
PointToPointNetDevice:SetMtu(0x558ca1a24000, 1500)
PointToPointNetDevice:SetAddress(0x558ca1a24000, 02-06-00:00:00:00:00:01)
PointToPointNetDevice:SetNode(0x558ca1a24000)
PointToPointNetDevice:SetIfIndex(0x558ca1a24000)
PointToPointNetDevice:SetQueue(0x558ca1a24000, 0x558ca1a546e0)
PointToPointNetDevice:PointToPointNetDevice(0x558ca1a242c0)
PointToPointNetDevice:SetMtu(0x558ca1a242c0, 1500)
PointToPointNetDevice:SetAddress(0x558ca1a242c0, 02-06-00:00:00:00:00:02)
PointToPointNetDevice:SetNode(0x558ca1a242c0)
PointToPointNetDevice:SetIfIndex(0x558ca1a242c0)
PointToPointNetDevice:SetQueue(0x558ca1a242c0, 0x558ca1a935b0)
PointToPointChannel:PointToPointChannel()
PointToPointNetDevice:Attach(0x558ca1a24000, 0x7fff39457d30)
PointToPointChannel:Attach(0x558ca1a3c780, 0x558ca1a24000)
PointToPointNetDevice:NotifyLinkUp(0x558ca1a24000)
PointToPointNetDevice:Attach(0x558ca1a242c0, 0x7fff39457d30)
PointToPointChannel:Attach(0x558ca1a3c780, 0x558ca1a242c0)
PointToPointNetDevice:NotifyLinkUp(0x558ca1a242c0)
Ipv4L3Protocol:Ipv4L3Protocol(0x558ca1a28e00)
Ipv4L3Protocol:SetIpForward(0x558ca1a28e00, 1)
Ipv4L3Protocol:SetWeakEsModel(0x558ca1a28e00, 1)
Ipv4L3Protocol:NotifyNewAggregate(0x558ca1a28e00)
Ipv4L3Protocol:SetNode(0x558ca1a28e00, 0x558ca1a903c0)
Ipv4L3Protocol:SetupLoopback(0x558ca1a28e00)
Ipv4Interface:Ipv4Interface(0x558ca1a4b320)
Ipv4Interface:SetDevice(0x558ca1a4b320, 0x558ca1a587a0)
Ipv4Interface:DoSetup(0x558ca1a4b320)
Ipv4Interface:SetNode(0x558ca1a4b320, 0x558ca1a903c0)
Ipv4Interface:DoSetup(0x558ca1a4b320)
Ipv4Interface:AddAddress(0x558ca1a4b320, m_local=127.0.0.1; m_mask=255.0.0.0; m_broadcast=127.255.255.255; m_scope=2; m_secondary=0)
Ipv4L3Protocol:AddIpv4Interface(0x558ca1a28e00, 0x558ca1a4b320)
Ipv4Interface:GetDevice(0x558ca1a4b320)
Ipv4Interface:SetUp(0x558ca1a4b320)
Ipv4L3Protocol:NotifyNewAggregate(0x558ca1a28e00)
Ipv4L3Protocol:Insert(0x558ca1a28e00, 0x558ca1a28dc0)
Ipv4L3Protocol:NotifyNewAggregate(0x558ca1a28e00)
Ipv4L3Protocol:NotifyNewAggregate(0x558ca1a28e00)
Ipv4L3Protocol:SetRoutingProtocol(0x558ca1a28e00, 0x558ca1a58580)
Ipv4L3Protocol:GetNInterfaces(0x558ca1a28e00)
Ipv4L3Protocol:IsUp(0x558ca1a28e00, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a28e00, 0)
Ipv4Interface:IsUp(0x558ca1a4b320)
Ipv4L3Protocol:GetNAddresses(0x558ca1a28e00, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a28e00, 0)
Ipv4Interface:GetNAddresses(0x558ca1a4b320)
Ipv4L3Protocol:GetAddress(0x558ca1a28e00, 0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a28e00, 0)
Ipv4Interface:GetAddress(0x558ca1a4b320, 0)
Ipv4L3Protocol:GetAddress(0x558ca1a28e00, 0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a28e00, 0)
Ipv4Interface:GetAddress(0x558ca1a4b320, 0)
Ipv4L3Protocol:GetAddress(0x558ca1a28e00, 0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a28e00, 0)
Ipv4Interface:GetAddress(0x558ca1a4b320, 0)
Ipv4L3Protocol:GetAddress(0x558ca1a28e00, 0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a28e00, 0)
Ipv4Interface:GetAddress(0x558ca1a4b320, 0)
Ipv4L3Protocol:GetAddress(0x558ca1a28e00, 0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a28e00, 0)
Ipv4Interface:GetAddress(0x558ca1a4b320, 0)
Ipv4L3Protocol:GetAddress(0x558ca1a28e00, 0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a28e00, 0)
Ipv4Interface:GetAddress(0x558ca1a4b320, 0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a28e00, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a28e00, 0)
Ipv4Interface:GetNAddresses(0x558ca1a4b320)
Ipv4L3Protocol:GetNInterfaces(0x558ca1a28e00)
Ipv4L3Protocol:NotifyNewAggregate(0x558ca1a28e00)
Ipv4L3Protocol:NotifyNewAggregate(0x558ca1a28e00)
Ipv4L3Protocol:NotifyNewAggregate(0x558ca1a28e00)
Ipv4L3Protocol:NotifyNewAggregate(0x558ca1a28e00)
Ipv4L3Protocol:NotifyNewAggregate(0x558ca1a28e00)
Ipv4L3Protocol:NotifyNewAggregate(0x558ca1a28e00)
TrafficControlLayer:TrafficControlLayer()
Ipv4L3Protocol:NotifyNewAggregate(0x558ca1a28e00)
TrafficControlLayer:NotifyNewAggregate(0x558ca1a29fa0)
TrafficControlLayer:SetNode(0x558ca1a29fa0, 0x558ca1a903c0)
UdpL4Protocol:UdpL4Protocol()
Ipv4L3Protocol:NotifyNewAggregate(0x558ca1a28e00)
TrafficControlLayer:NotifyNewAggregate(0x558ca1a29fa0)
UdpL4Protocol:NotifyNewAggregate(0x558ca1a91900)
Ipv4L3Protocol:NotifyNewAggregate(0x558ca1a28e00)
TrafficControlLayer:NotifyNewAggregate(0x558ca1a29fa0)
UdpL4Protocol:NotifyNewAggregate(0x558ca1a91900)
Ipv4L3Protocol:Insert(0x558ca1a28e00, 0x558ca1a91900)
UdpL4Protocol:SetDownTarget(0x558ca1a91900)
UdpL4Protocol:SetDownTarget6(0x558ca1a91900)
Ipv4L3Protocol:NotifyNewAggregate(0x558ca1a28e00)
TrafficControlLayer:NotifyNewAggregate(0x558ca1a29fa0)
UdpL4Protocol:NotifyNewAggregate(0x558ca1a91900)
Ipv4L3Protocol:NotifyNewAggregate(0x558ca1a28e00)
TrafficControlLayer:NotifyNewAggregate(0x558ca1a29fa0)
UdpL4Protocol:NotifyNewAggregate(0x558ca1a91900)
Ipv4L3Protocol:Insert(0x558ca1a28e00, 0x558ca1a22560)
Ipv4L3Protocol:NotifyNewAggregate(0x558ca1a28e00)
TrafficControlLayer:NotifyNewAggregate(0x558ca1a29fa0)
UdpL4Protocol:NotifyNewAggregate(0x558ca1a91900)
Ipv4L3Protocol:Ipv4L3Protocol(0x558ca1a2a7e0)
Ipv4L3Protocol:SetIpForward(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:SetWeakEsModel(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:NotifyNewAggregate(0x558ca1a2a7e0)
Ipv4L3Protocol:SetNode(0x558ca1a2a7e0, 0x558ca1a00fe0)
Ipv4L3Protocol:SetupLoopback(0x558ca1a2a7e0)
Ipv4Interface:Ipv4Interface(0x558ca1a29cc0)
Ipv4Interface:SetDevice(0x558ca1a29cc0, 0x558ca1a2a040)
Ipv4Interface:DoSetup(0x558ca1a29cc0)
Ipv4Interface:SetNode(0x558ca1a29cc0, 0x558ca1a00fe0)
Ipv4Interface:DoSetup(0x558ca1a29cc0)
Ipv4Interface:AddAddress(0x558ca1a29cc0, m_local=127.0.0.1; m_mask=255.0.0.0; m_broadcast=127.255.255.255; m_scope=2; m_secondary=0)
Ipv4L3Protocol:AddIpv4Interface(0x558ca1a2a7e0, 0x558ca1a29cc0)
Ipv4Interface:GetDevice(0x558ca1a29cc0)
Ipv4Interface:SetUp(0x558ca1a29cc0)
Ipv4L3Protocol:NotifyNewAggregate(0x558ca1a2a7e0)
Ipv4L3Protocol:Insert(0x558ca1a2a7e0, 0x558ca1a2a7a0)
Ipv4L3Protocol:NotifyNewAggregate(0x558ca1a2a7e0)
Ipv4L3Protocol:NotifyNewAggregate(0x558ca1a2a7e0)
Ipv4L3Protocol:SetRoutingProtocol(0x558ca1a2a7e0, 0x558ca1a29d20)
Ipv4L3Protocol:GetNInterfaces(0x558ca1a2a7e0)
Ipv4L3Protocol:IsUp(0x558ca1a2a7e0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 0)
Ipv4Interface:IsUp(0x558ca1a29cc0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 0)
Ipv4Interface:GetNAddresses(0x558ca1a29cc0)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 0)
Ipv4Interface:GetAddress(0x558ca1a29cc0, 0)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 0)
Ipv4Interface:GetAddress(0x558ca1a29cc0, 0)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 0)
Ipv4Interface:GetAddress(0x558ca1a29cc0, 0)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 0)
Ipv4Interface:GetAddress(0x558ca1a29cc0, 0)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 0)
Ipv4Interface:GetAddress(0x558ca1a29cc0, 0)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 0)
Ipv4Interface:GetAddress(0x558ca1a29cc0, 0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 0)
Ipv4Interface:GetNAddresses(0x558ca1a29cc0)
Ipv4L3Protocol:GetNInterfaces(0x558ca1a2a7e0)
Ipv4L3Protocol:NotifyNewAggregate(0x558ca1a2a7e0)
Ipv4L3Protocol:NotifyNewAggregate(0x558ca1a2a7e0)
Ipv4L3Protocol:NotifyNewAggregate(0x558ca1a2a7e0)
Ipv4L3Protocol:NotifyNewAggregate(0x558ca1a2a7e0)
Ipv4L3Protocol:NotifyNewAggregate(0x558ca1a2a7e0)
Ipv4L3Protocol:NotifyNewAggregate(0x558ca1a2a7e0)
TrafficControlLayer:TrafficControlLayer()
Ipv4L3Protocol:NotifyNewAggregate(0x558ca1a2a7e0)
TrafficControlLayer:NotifyNewAggregate(0x558ca1a2bc90)
TrafficControlLayer:SetNode(0x558ca1a2bc90, 0x558ca1a00fe0)
UdpL4Protocol:UdpL4Protocol()
Ipv4L3Protocol:NotifyNewAggregate(0x558ca1a2a7e0)
TrafficControlLayer:NotifyNewAggregate(0x558ca1a2bc90)
UdpL4Protocol:NotifyNewAggregate(0x558ca1a2bb60)
Ipv4L3Protocol:NotifyNewAggregate(0x558ca1a2a7e0)
TrafficControlLayer:NotifyNewAggregate(0x558ca1a2bc90)
UdpL4Protocol:NotifyNewAggregate(0x558ca1a2bb60)
Ipv4L3Protocol:Insert(0x558ca1a2a7e0, 0x558ca1a2bb60)
UdpL4Protocol:SetDownTarget(0x558ca1a2bb60)
UdpL4Protocol:SetDownTarget6(0x558ca1a2bb60)
Ipv4L3Protocol:NotifyNewAggregate(0x558ca1a2a7e0)
TrafficControlLayer:NotifyNewAggregate(0x558ca1a2bc90)
UdpL4Protocol:NotifyNewAggregate(0x558ca1a2bb60)
Ipv4L3Protocol:NotifyNewAggregate(0x558ca1a2a7e0)
TrafficControlLayer:NotifyNewAggregate(0x558ca1a2bc90)
UdpL4Protocol:NotifyNewAggregate(0x558ca1a2bb60)
Ipv4L3Protocol:Insert(0x558ca1a2a7e0, 0x558ca1a2b930)
Ipv4L3Protocol:NotifyNewAggregate(0x558ca1a2a7e0)
TrafficControlLayer:NotifyNewAggregate(0x558ca1a2bc90)
UdpL4Protocol:NotifyNewAggregate(0x558ca1a2bb60)
Ipv4L3Protocol:GetInterfaceForDevice(0x558ca1a28e00, 0x558ca1a24000)
Ipv4L3Protocol:AddInterface(0x558ca1a28e00, 0x558ca1a24000)
TrafficControlLayer:RegisterProtocolHandler(0x558ca1a29fa0, 2048, 0x558ca1a24000)
Handler for NetDevice: 0x558ca1a24000 registered for protocol 2048.
TrafficControlLayer:RegisterProtocolHandler(0x558ca1a29fa0, 2054, 0x558ca1a24000)
Handler for NetDevice: 0x558ca1a24000 registered for protocol 2054.
Ipv4Interface:Ipv4Interface(0x558ca1a2b8d0)
Ipv4Interface:SetNode(0x558ca1a2b8d0, 0x558ca1a903c0)
Ipv4Interface:DoSetup(0x558ca1a2b8d0)
Ipv4Interface:SetDevice(0x558ca1a2b8d0, 0x558ca1a24000)
Ipv4Interface:DoSetup(0x558ca1a2b8d0)
PointToPointNetDevice:NeedsArp(0x558ca1a24000)
Ipv4Interface:SetTrafficControl(0x558ca1a2b8d0, 0x558ca1a29fa0)
Ipv4Interface:SetForwarding(0x558ca1a2b8d0, 1)
TrafficControlLayer:SetupDevice(0x558ca1a29fa0, 0x558ca1a24000)
PointToPointNetDevice:NotifyNewAggregate(0x558ca1a24000)
Ipv4L3Protocol:AddIpv4Interface(0x558ca1a28e00, 0x558ca1a2b8d0)
Ipv4Interface:GetDevice(0x558ca1a2b8d0)
Ipv4L3Protocol:AddAddress(0x558ca1a28e00, 1, m_local=10.1.1.1; m_mask=255.255.255.0; m_broadcast=10.1.1.255; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0x558ca1a28e00, 1)
Ipv4Interface:AddAddress(0x558ca1a2b8d0, m_local=10.1.1.1; m_mask=255.255.255.0; m_broadcast=10.1.1.255; m_scope=2; m_secondary=0)
Ipv4L3Protocol:IsUp(0x558ca1a28e00, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a28e00, 1)
Ipv4Interface:IsUp(0x558ca1a2b8d0)
Ipv4L3Protocol:SetMetric(0x558ca1a28e00, 1, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a28e00, 1)
Ipv4Interface:SetMetric(0x558ca1a2b8d0, 1)
Ipv4L3Protocol:SetUp(0x558ca1a28e00, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a28e00, 1)
Ipv4Interface:GetDevice(0x558ca1a2b8d0)
PointToPointNetDevice:GetMtu(0x558ca1a24000)
Ipv4Interface:SetUp(0x558ca1a2b8d0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a28e00, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a28e00, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b8d0)
Ipv4L3Protocol:GetAddress(0x558ca1a28e00, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a28e00, 1)
Ipv4Interface:GetAddress(0x558ca1a2b8d0, 0)
Ipv4L3Protocol:GetAddress(0x558ca1a28e00, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a28e00, 1)
Ipv4Interface:GetAddress(0x558ca1a2b8d0, 0)
Ipv4L3Protocol:GetAddress(0x558ca1a28e00, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a28e00, 1)
Ipv4Interface:GetAddress(0x558ca1a2b8d0, 0)
Ipv4L3Protocol:GetAddress(0x558ca1a28e00, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a28e00, 1)
Ipv4Interface:GetAddress(0x558ca1a2b8d0, 0)
Ipv4L3Protocol:GetAddress(0x558ca1a28e00, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a28e00, 1)
Ipv4Interface:GetAddress(0x558ca1a2b8d0, 0)
Ipv4L3Protocol:GetAddress(0x558ca1a28e00, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a28e00, 1)
Ipv4Interface:GetAddress(0x558ca1a2b8d0, 0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a28e00, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a28e00, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b8d0)
TrafficControlLayer:GetRootQueueDiscOnDevice(0x558ca1a29fa0, 0x558ca1a24000)
TrafficControlLayer:SetRootQueueDiscOnDevice(0x558ca1a29fa0, 0x558ca1a24000, 0x558ca1a4e160)
Ipv4L3Protocol:GetInterfaceForDevice(0x558ca1a2a7e0, 0x558ca1a242c0)
Ipv4L3Protocol:AddInterface(0x558ca1a2a7e0, 0x558ca1a242c0)
TrafficControlLayer:RegisterProtocolHandler(0x558ca1a2bc90, 2048, 0x558ca1a242c0)
Handler for NetDevice: 0x558ca1a242c0 registered for protocol 2048.
TrafficControlLayer:RegisterProtocolHandler(0x558ca1a2bc90, 2054, 0x558ca1a242c0)
Handler for NetDevice: 0x558ca1a242c0 registered for protocol 2054.
Ipv4Interface:Ipv4Interface(0x558ca1a2b310)
Ipv4Interface:SetNode(0x558ca1a2b310, 0x558ca1a00fe0)
Ipv4Interface:DoSetup(0x558ca1a2b310)
Ipv4Interface:SetDevice(0x558ca1a2b310, 0x558ca1a242c0)
Ipv4Interface:DoSetup(0x558ca1a2b310)
PointToPointNetDevice:NeedsArp(0x558ca1a242c0)
Ipv4Interface:SetTrafficControl(0x558ca1a2b310, 0x558ca1a2bc90)
Ipv4Interface:SetForwarding(0x558ca1a2b310, 1)
TrafficControlLayer:SetupDevice(0x558ca1a2bc90, 0x558ca1a242c0)
PointToPointNetDevice:NotifyNewAggregate(0x558ca1a242c0)
Ipv4L3Protocol:AddIpv4Interface(0x558ca1a2a7e0, 0x558ca1a2b310)
Ipv4Interface:GetDevice(0x558ca1a2b310)
Ipv4L3Protocol:AddAddress(0x558ca1a2a7e0, 1, m_local=10.1.1.2; m_mask=255.255.255.0; m_broadcast=10.1.1.255; m_scope=2; m_secondary=0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:AddAddress(0x558ca1a2b310, m_local=10.1.1.2; m_mask=255.255.255.0; m_broadcast=10.1.1.255; m_scope=2; m_secondary=0)
Ipv4L3Protocol:IsUp(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:IsUp(0x558ca1a2b310)
Ipv4L3Protocol:SetMetric(0x558ca1a2a7e0, 1, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:SetMetric(0x558ca1a2b310, 1)
Ipv4L3Protocol:SetUp(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetDevice(0x558ca1a2b310)
PointToPointNetDevice:GetMtu(0x558ca1a242c0)
Ipv4Interface:SetUp(0x558ca1a2b310)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetAddress(0x558ca1a2b310, 0)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetAddress(0x558ca1a2b310, 0)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetAddress(0x558ca1a2b310, 0)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetAddress(0x558ca1a2b310, 0)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetAddress(0x558ca1a2b310, 0)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetAddress(0x558ca1a2b310, 0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
TrafficControlLayer:GetRootQueueDiscOnDevice(0x558ca1a2bc90, 0x558ca1a242c0)
TrafficControlLayer:SetRootQueueDiscOnDevice(0x558ca1a2bc90, 0x558ca1a242c0, 0x558ca1a4c7d0)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetAddress(0x558ca1a2b310, 0)
GameUser:GameUser(0x558ca19d9900)
Ipv4L3Protocol:GetAddress(0x558ca1a28e00, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a28e00, 1)
Ipv4Interface:GetAddress(0x558ca1a2b8d0, 0)
GameServer:GameServer(0x558ca1a2d4e0)
TrafficControlLayer:DoInitialize(0x558ca1a29fa0)
TrafficControlLayer:DoInitialize(0x558ca1a2bc90)
GameUser:StartApplication(0x558ca19d9900)
Socket:CreateSocket(0x558ca1a903c0, ns3::UdpSocketFactory)
UdpL4Protocol:CreateSocket()
Socket:Socket()
UdpSocket:UdpSocket()
UdpSocketImpl:UdpSocketImpl()
UdpSocketImpl:SetNode()
UdpSocketImpl:SetUdp()
UdpSocketImpl:Bind(0x558ca1a2e4d0, 03-07-00:00:00:00:90:1f:00)
UdpSocketImpl:GetSockName()
Socket:GetBoundNetDevice(0x558ca1a2e4d0)
UdpL4Protocol:Allocate(0x558ca1a91900, 0, 8080)
UdpSocketImpl:FinishBind()
Socket:SetRecvCallback(0x558ca1a2e4d0, 0x7fff39457c10)
GameServer:StartApplication(0x558ca1a2d4e0)
Socket:CreateSocket(0x558ca1a00fe0, ns3::UdpSocketFactory)
UdpL4Protocol:CreateSocket()
Socket:Socket()
UdpSocket:UdpSocket()
UdpSocketImpl:UdpSocketImpl()
UdpSocketImpl:SetNode()
UdpSocketImpl:SetUdp()
UdpSocketImpl:Bind(0x558ca1a2e690, 00-00-00)
Not IsMatchingType
UdpSocketImpl:Connect(0x558ca1a2e690, 03-07-0a:01:01:01:90:1f:00)
UdpSocketImpl:GetSockName()
Socket:NotifyConnectionSucceeded(0x558ca1a2e690)
Socket:SetRecvCallback(0x558ca1a2e690, 0x7fff39457c20)
GameServer:SendFrame(0x558ca1a2d4e0)
GameServer:NextFrame(0x558ca1a2d4e0)
Frame Dimension: 100
Socket:Send(0x558ca1a2e690, 0x558ca19f4910)
UdpSocketImpl:Send(0x558ca1a2e690, 0x558ca19f4910, 0)
UdpSocketImpl:DoSend(0x558ca1a2e690, 0x558ca19f4910)
UdpSocketImpl:Bind()
UdpL4Protocol:Allocate(0x558ca1a2bb60)
UdpSocketImpl:FinishBind()
UdpSocketImpl:DoSendTo(0x558ca1a2e690, 0x558ca19f4910, 10.1.1.1, 8080, 0)
UdpSocketImpl:GetTxAvailable()
Socket:SocketSetDontFragmentTag(0x7fff39457950)
Socket:Disable(0x7fff39457950)
Socket:GetSerializedSize(0x7fff39457950)
Socket:Serialize(0x7fff39457950, 0x7fff394576c0)
Ipv4L3Protocol:GetRoutingProtocol(0x558ca1a2a7e0)
Ipv4L3Protocol:GetRoutingProtocol(0x558ca1a2a7e0)
Ipv4L3Protocol:SourceAddressSelection(0x558ca1a2a7e0, 1, " ", 10.1.1.0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetAddress(0x558ca1a2b310, 0)
Ipv4L3Protocol:GetNetDevice(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetDevice(0x558ca1a2b310)
Route exists
Ipv4L3Protocol:GetInterfaceForDevice(0x558ca1a2a7e0, 0x558ca1a242c0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetAddress(0x558ca1a2b310, 0)
UdpL4Protocol:Send(0x558ca1a2bb60, 0x558ca1a49670, 10.1.1.2, 10.1.1.1, 49153, 8080, 0x558ca19d0aa0)
Ipv4L3Protocol:Send(0x558ca1a2a7e0, 0x558ca1a49670, 10.1.1.2, 10.1.1.1, 17, 0x558ca19d0aa0)
Socket:SocketIpTtlTag(0x7fff394574e0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 0)
Ipv4Interface:GetNAddresses(0x558ca1a29cc0)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 0)
Ipv4Interface:GetAddress(0x558ca1a29cc0, 0)
Testing address 127.0.0.1 with mask 255.0.0.0
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 0)
Ipv4Interface:GetNAddresses(0x558ca1a29cc0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetAddress(0x558ca1a2b310, 0)
Testing address 10.1.1.2 with mask 255.255.255.0
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol::Send case 3:  passed in with route
Ipv4L3Protocol:BuildHeader(0x558ca1a2a7e0, 10.1.1.2, 10.1.1.1, 17, 108, 64, 0, 1)
Ipv4L3Protocol:GetInterfaceForDevice(0x558ca1a2a7e0, 0x558ca1a242c0)
Ipv4L3Protocol:SendRealOut(0x558ca1a2a7e0, 0x558ca19d0aa0, 0x558ca1a494f0, 0x7fff39457500)
Ipv4L3Protocol:GetInterfaceForDevice(0x558ca1a2a7e0, 0x558ca1a242c0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Send via NetDevice ifIndex 0 ipv4InterfaceIndex 1
Ipv4Interface:IsUp(0x558ca1a2b310)
Send to destination 10.1.1.1
Ipv4Interface:GetDevice(0x558ca1a2b310)
PointToPointNetDevice:GetMtu(0x558ca1a242c0)
Ipv4Interface:Send(0x558ca1a2b310, , 10.1.1.1)
Ipv4Interface:IsUp(0x558ca1a2b310)
PointToPointNetDevice:NeedsArp(0x558ca1a242c0)
Doesn't need ARP
PointToPointNetDevice:GetBroadcast(0x558ca1a242c0)
TrafficControlLayer:Send(0x558ca1a2bc90, 0x558ca1a242c0, 0x558ca1a7c0e0)
Send packet to device 0x558ca1a242c0 protocol number 2048
PointToPointNetDevice:Send(0x558ca1a242c0, 0x558ca1a494f0, 02-06-ff:ff:ff:ff:ff:ff, 2048)
PointToPointNetDevice:IsLinkUp(0x558ca1a242c0)
PointToPointNetDevice:AddHeader(0x558ca1a242c0, 0x558ca1a494f0, 2048)
PointToPointNetDevice:EtherToPpp()
PointToPointNetDevice:GetMtu(0x558ca1a242c0)
PointToPointNetDevice:GetMtu(0x558ca1a242c0)
PointToPointNetDevice:TransmitStart(0x558ca1a242c0, 0x558ca1a494f0)
PointToPointChannel:TransmitStart(0x558ca1a3c780, 0x558ca1a494f0, 0x558ca1a242c0)
Socket:NotifyDataSent(0x558ca1a2e690, 100)
GameServer:ScheduleDisplay(0x558ca1a2d4e0)
GameServer:Display(0x558ca1a2d4e0)
Next Frame is 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
GameServer:SendFrame(0x558ca1a2d4e0)
GameServer:NextFrame(0x558ca1a2d4e0)
Frame Dimension: 100
Socket:Send(0x558ca1a2e690, 0x558ca1a49670)
UdpSocketImpl:Send(0x558ca1a2e690, 0x558ca1a49670, 0)
UdpSocketImpl:DoSend(0x558ca1a2e690, 0x558ca1a49670)
UdpSocketImpl:DoSendTo(0x558ca1a2e690, 0x558ca1a49670, 10.1.1.1, 8080, 0)
UdpSocketImpl:GetTxAvailable()
Socket:SocketSetDontFragmentTag(0x7fff39457950)
Socket:Disable(0x7fff39457950)
Socket:GetSerializedSize(0x7fff39457950)
Socket:Serialize(0x7fff39457950, 0x7fff394576c0)
Ipv4L3Protocol:GetRoutingProtocol(0x558ca1a2a7e0)
Ipv4L3Protocol:GetRoutingProtocol(0x558ca1a2a7e0)
Ipv4L3Protocol:SourceAddressSelection(0x558ca1a2a7e0, 1, " ", 10.1.1.0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetAddress(0x558ca1a2b310, 0)
Ipv4L3Protocol:GetNetDevice(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetDevice(0x558ca1a2b310)
Route exists
Ipv4L3Protocol:GetInterfaceForDevice(0x558ca1a2a7e0, 0x558ca1a242c0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetAddress(0x558ca1a2b310, 0)
UdpL4Protocol:Send(0x558ca1a2bb60, 0x558ca1a89870, 10.1.1.2, 10.1.1.1, 49153, 8080, 0x558ca19e6bc0)
Ipv4L3Protocol:Send(0x558ca1a2a7e0, 0x558ca1a89870, 10.1.1.2, 10.1.1.1, 17, 0x558ca19e6bc0)
Socket:SocketIpTtlTag(0x7fff394574e0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 0)
Ipv4Interface:GetNAddresses(0x558ca1a29cc0)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 0)
Ipv4Interface:GetAddress(0x558ca1a29cc0, 0)
Testing address 127.0.0.1 with mask 255.0.0.0
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 0)
Ipv4Interface:GetNAddresses(0x558ca1a29cc0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetAddress(0x558ca1a2b310, 0)
Testing address 10.1.1.2 with mask 255.255.255.0
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol::Send case 3:  passed in with route
Ipv4L3Protocol:BuildHeader(0x558ca1a2a7e0, 10.1.1.2, 10.1.1.1, 17, 108, 64, 0, 1)
Ipv4L3Protocol:GetInterfaceForDevice(0x558ca1a2a7e0, 0x558ca1a242c0)
Ipv4L3Protocol:SendRealOut(0x558ca1a2a7e0, 0x558ca19e6bc0, 0x558ca1a942e0, 0x7fff39457500)
Ipv4L3Protocol:GetInterfaceForDevice(0x558ca1a2a7e0, 0x558ca1a242c0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Send via NetDevice ifIndex 0 ipv4InterfaceIndex 1
Ipv4Interface:IsUp(0x558ca1a2b310)
Send to destination 10.1.1.1
Ipv4Interface:GetDevice(0x558ca1a2b310)
PointToPointNetDevice:GetMtu(0x558ca1a242c0)
Ipv4Interface:Send(0x558ca1a2b310, , 10.1.1.1)
Ipv4Interface:IsUp(0x558ca1a2b310)
PointToPointNetDevice:NeedsArp(0x558ca1a242c0)
Doesn't need ARP
PointToPointNetDevice:GetBroadcast(0x558ca1a242c0)
TrafficControlLayer:Send(0x558ca1a2bc90, 0x558ca1a242c0, 0x558ca1a32cb0)
Send packet to device 0x558ca1a242c0 protocol number 2048
PointToPointNetDevice:Send(0x558ca1a242c0, 0x558ca1a942e0, 02-06-ff:ff:ff:ff:ff:ff, 2048)
PointToPointNetDevice:IsLinkUp(0x558ca1a242c0)
PointToPointNetDevice:AddHeader(0x558ca1a242c0, 0x558ca1a942e0, 2048)
PointToPointNetDevice:EtherToPpp()
PointToPointNetDevice:GetMtu(0x558ca1a242c0)
Socket:NotifyDataSent(0x558ca1a2e690, 100)
GameServer:ScheduleDisplay(0x558ca1a2d4e0)
GameServer:Display(0x558ca1a2d4e0)
Next Frame is 1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
GameServer:SendFrame(0x558ca1a2d4e0)
GameServer:NextFrame(0x558ca1a2d4e0)
Frame Dimension: 100
Socket:Send(0x558ca1a2e690, 0x558ca1a89870)
UdpSocketImpl:Send(0x558ca1a2e690, 0x558ca1a89870, 0)
UdpSocketImpl:DoSend(0x558ca1a2e690, 0x558ca1a89870)
UdpSocketImpl:DoSendTo(0x558ca1a2e690, 0x558ca1a89870, 10.1.1.1, 8080, 0)
UdpSocketImpl:GetTxAvailable()
Socket:SocketSetDontFragmentTag(0x7fff39457950)
Socket:Disable(0x7fff39457950)
Socket:GetSerializedSize(0x7fff39457950)
Socket:Serialize(0x7fff39457950, 0x7fff394576c0)
Ipv4L3Protocol:GetRoutingProtocol(0x558ca1a2a7e0)
Ipv4L3Protocol:GetRoutingProtocol(0x558ca1a2a7e0)
Ipv4L3Protocol:SourceAddressSelection(0x558ca1a2a7e0, 1, " ", 10.1.1.0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetAddress(0x558ca1a2b310, 0)
Ipv4L3Protocol:GetNetDevice(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetDevice(0x558ca1a2b310)
Route exists
Ipv4L3Protocol:GetInterfaceForDevice(0x558ca1a2a7e0, 0x558ca1a242c0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetAddress(0x558ca1a2b310, 0)
UdpL4Protocol:Send(0x558ca1a2bb60, 0x558ca1a802f0, 10.1.1.2, 10.1.1.1, 49153, 8080, 0x558ca1a32e90)
Ipv4L3Protocol:Send(0x558ca1a2a7e0, 0x558ca1a802f0, 10.1.1.2, 10.1.1.1, 17, 0x558ca1a32e90)
Socket:SocketIpTtlTag(0x7fff394574e0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 0)
Ipv4Interface:GetNAddresses(0x558ca1a29cc0)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 0)
Ipv4Interface:GetAddress(0x558ca1a29cc0, 0)
Testing address 127.0.0.1 with mask 255.0.0.0
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 0)
Ipv4Interface:GetNAddresses(0x558ca1a29cc0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetAddress(0x558ca1a2b310, 0)
Testing address 10.1.1.2 with mask 255.255.255.0
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol::Send case 3:  passed in with route
Ipv4L3Protocol:BuildHeader(0x558ca1a2a7e0, 10.1.1.2, 10.1.1.1, 17, 108, 64, 0, 1)
Ipv4L3Protocol:GetInterfaceForDevice(0x558ca1a2a7e0, 0x558ca1a242c0)
Ipv4L3Protocol:SendRealOut(0x558ca1a2a7e0, 0x558ca1a32e90, 0x558ca1a32eb0, 0x7fff39457500)
Ipv4L3Protocol:GetInterfaceForDevice(0x558ca1a2a7e0, 0x558ca1a242c0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Send via NetDevice ifIndex 0 ipv4InterfaceIndex 1
Ipv4Interface:IsUp(0x558ca1a2b310)
Send to destination 10.1.1.1
Ipv4Interface:GetDevice(0x558ca1a2b310)
PointToPointNetDevice:GetMtu(0x558ca1a242c0)
Ipv4Interface:Send(0x558ca1a2b310, , 10.1.1.1)
Ipv4Interface:IsUp(0x558ca1a2b310)
PointToPointNetDevice:NeedsArp(0x558ca1a242c0)
Doesn't need ARP
PointToPointNetDevice:GetBroadcast(0x558ca1a242c0)
TrafficControlLayer:Send(0x558ca1a2bc90, 0x558ca1a242c0, 0x558ca1a32cb0)
Send packet to device 0x558ca1a242c0 protocol number 2048
PointToPointNetDevice:Send(0x558ca1a242c0, 0x558ca1a32eb0, 02-06-ff:ff:ff:ff:ff:ff, 2048)
PointToPointNetDevice:IsLinkUp(0x558ca1a242c0)
PointToPointNetDevice:AddHeader(0x558ca1a242c0, 0x558ca1a32eb0, 2048)
PointToPointNetDevice:EtherToPpp()
PointToPointNetDevice:GetMtu(0x558ca1a242c0)
Socket:NotifyDataSent(0x558ca1a2e690, 100)
GameServer:ScheduleDisplay(0x558ca1a2d4e0)
GameServer:Display(0x558ca1a2d4e0)
Next Frame is 0010001101110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
GameServer:SendFrame(0x558ca1a2d4e0)
GameServer:NextFrame(0x558ca1a2d4e0)
Frame Dimension: 100
Socket:Send(0x558ca1a2e690, 0x558ca1a802f0)
UdpSocketImpl:Send(0x558ca1a2e690, 0x558ca1a802f0, 0)
UdpSocketImpl:DoSend(0x558ca1a2e690, 0x558ca1a802f0)
UdpSocketImpl:DoSendTo(0x558ca1a2e690, 0x558ca1a802f0, 10.1.1.1, 8080, 0)
UdpSocketImpl:GetTxAvailable()
Socket:SocketSetDontFragmentTag(0x7fff39457950)
Socket:Disable(0x7fff39457950)
Socket:GetSerializedSize(0x7fff39457950)
Socket:Serialize(0x7fff39457950, 0x7fff394576c0)
Ipv4L3Protocol:GetRoutingProtocol(0x558ca1a2a7e0)
Ipv4L3Protocol:GetRoutingProtocol(0x558ca1a2a7e0)
Ipv4L3Protocol:SourceAddressSelection(0x558ca1a2a7e0, 1, " ", 10.1.1.0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetAddress(0x558ca1a2b310, 0)
Ipv4L3Protocol:GetNetDevice(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetDevice(0x558ca1a2b310)
Route exists
Ipv4L3Protocol:GetInterfaceForDevice(0x558ca1a2a7e0, 0x558ca1a242c0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetAddress(0x558ca1a2b310, 0)
UdpL4Protocol:Send(0x558ca1a2bb60, 0x558ca1a32f20, 10.1.1.2, 10.1.1.1, 49153, 8080, 0x558ca1a33070)
Ipv4L3Protocol:Send(0x558ca1a2a7e0, 0x558ca1a32f20, 10.1.1.2, 10.1.1.1, 17, 0x558ca1a33070)
Socket:SocketIpTtlTag(0x7fff394574e0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 0)
Ipv4Interface:GetNAddresses(0x558ca1a29cc0)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 0)
Ipv4Interface:GetAddress(0x558ca1a29cc0, 0)
Testing address 127.0.0.1 with mask 255.0.0.0
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 0)
Ipv4Interface:GetNAddresses(0x558ca1a29cc0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetAddress(0x558ca1a2b310, 0)
Testing address 10.1.1.2 with mask 255.255.255.0
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol::Send case 3:  passed in with route
Ipv4L3Protocol:BuildHeader(0x558ca1a2a7e0, 10.1.1.2, 10.1.1.1, 17, 108, 64, 0, 1)
Ipv4L3Protocol:GetInterfaceForDevice(0x558ca1a2a7e0, 0x558ca1a242c0)
Ipv4L3Protocol:SendRealOut(0x558ca1a2a7e0, 0x558ca1a33070, 0x558ca1a33090, 0x7fff39457500)
Ipv4L3Protocol:GetInterfaceForDevice(0x558ca1a2a7e0, 0x558ca1a242c0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Send via NetDevice ifIndex 0 ipv4InterfaceIndex 1
Ipv4Interface:IsUp(0x558ca1a2b310)
Send to destination 10.1.1.1
Ipv4Interface:GetDevice(0x558ca1a2b310)
PointToPointNetDevice:GetMtu(0x558ca1a242c0)
Ipv4Interface:Send(0x558ca1a2b310, , 10.1.1.1)
Ipv4Interface:IsUp(0x558ca1a2b310)
PointToPointNetDevice:NeedsArp(0x558ca1a242c0)
Doesn't need ARP
PointToPointNetDevice:GetBroadcast(0x558ca1a242c0)
TrafficControlLayer:Send(0x558ca1a2bc90, 0x558ca1a242c0, 0x558ca1a32cb0)
Send packet to device 0x558ca1a242c0 protocol number 2048
PointToPointNetDevice:Send(0x558ca1a242c0, 0x558ca1a33090, 02-06-ff:ff:ff:ff:ff:ff, 2048)
PointToPointNetDevice:IsLinkUp(0x558ca1a242c0)
PointToPointNetDevice:AddHeader(0x558ca1a242c0, 0x558ca1a33090, 2048)
PointToPointNetDevice:EtherToPpp()
PointToPointNetDevice:GetMtu(0x558ca1a242c0)
Socket:NotifyDataSent(0x558ca1a2e690, 100)
GameServer:ScheduleDisplay(0x558ca1a2d4e0)
GameServer:Display(0x558ca1a2d4e0)
Next Frame is 0000000000001000110111000000000000000000000000000000000000000000000000000000000000000000000000000000
GameServer:SendFrame(0x558ca1a2d4e0)
GameServer:NextFrame(0x558ca1a2d4e0)
Frame Dimension: 100
Socket:Send(0x558ca1a2e690, 0x558ca1a32f20)
UdpSocketImpl:Send(0x558ca1a2e690, 0x558ca1a32f20, 0)
UdpSocketImpl:DoSend(0x558ca1a2e690, 0x558ca1a32f20)
UdpSocketImpl:DoSendTo(0x558ca1a2e690, 0x558ca1a32f20, 10.1.1.1, 8080, 0)
UdpSocketImpl:GetTxAvailable()
Socket:SocketSetDontFragmentTag(0x7fff39457950)
Socket:Disable(0x7fff39457950)
Socket:GetSerializedSize(0x7fff39457950)
Socket:Serialize(0x7fff39457950, 0x7fff394576c0)
Ipv4L3Protocol:GetRoutingProtocol(0x558ca1a2a7e0)
Ipv4L3Protocol:GetRoutingProtocol(0x558ca1a2a7e0)
Ipv4L3Protocol:SourceAddressSelection(0x558ca1a2a7e0, 1, " ", 10.1.1.0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetAddress(0x558ca1a2b310, 0)
Ipv4L3Protocol:GetNetDevice(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetDevice(0x558ca1a2b310)
Route exists
Ipv4L3Protocol:GetInterfaceForDevice(0x558ca1a2a7e0, 0x558ca1a242c0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetAddress(0x558ca1a2b310, 0)
UdpL4Protocol:Send(0x558ca1a2bb60, 0x558ca1a33100, 10.1.1.2, 10.1.1.1, 49153, 8080, 0x558ca1a33250)
Ipv4L3Protocol:Send(0x558ca1a2a7e0, 0x558ca1a33100, 10.1.1.2, 10.1.1.1, 17, 0x558ca1a33250)
Socket:SocketIpTtlTag(0x7fff394574e0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 0)
Ipv4Interface:GetNAddresses(0x558ca1a29cc0)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 0)
Ipv4Interface:GetAddress(0x558ca1a29cc0, 0)
Testing address 127.0.0.1 with mask 255.0.0.0
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 0)
Ipv4Interface:GetNAddresses(0x558ca1a29cc0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetAddress(0x558ca1a2b310, 0)
Testing address 10.1.1.2 with mask 255.255.255.0
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol::Send case 3:  passed in with route
Ipv4L3Protocol:BuildHeader(0x558ca1a2a7e0, 10.1.1.2, 10.1.1.1, 17, 108, 64, 0, 1)
Ipv4L3Protocol:GetInterfaceForDevice(0x558ca1a2a7e0, 0x558ca1a242c0)
Ipv4L3Protocol:SendRealOut(0x558ca1a2a7e0, 0x558ca1a33250, 0x558ca1a33270, 0x7fff39457500)
Ipv4L3Protocol:GetInterfaceForDevice(0x558ca1a2a7e0, 0x558ca1a242c0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Send via NetDevice ifIndex 0 ipv4InterfaceIndex 1
Ipv4Interface:IsUp(0x558ca1a2b310)
Send to destination 10.1.1.1
Ipv4Interface:GetDevice(0x558ca1a2b310)
PointToPointNetDevice:GetMtu(0x558ca1a242c0)
Ipv4Interface:Send(0x558ca1a2b310, , 10.1.1.1)
Ipv4Interface:IsUp(0x558ca1a2b310)
PointToPointNetDevice:NeedsArp(0x558ca1a242c0)
Doesn't need ARP
PointToPointNetDevice:GetBroadcast(0x558ca1a242c0)
TrafficControlLayer:Send(0x558ca1a2bc90, 0x558ca1a242c0, 0x558ca1a32cb0)
Send packet to device 0x558ca1a242c0 protocol number 2048
PointToPointNetDevice:Send(0x558ca1a242c0, 0x558ca1a33270, 02-06-ff:ff:ff:ff:ff:ff, 2048)
PointToPointNetDevice:IsLinkUp(0x558ca1a242c0)
PointToPointNetDevice:AddHeader(0x558ca1a242c0, 0x558ca1a33270, 2048)
PointToPointNetDevice:EtherToPpp()
PointToPointNetDevice:GetMtu(0x558ca1a242c0)
Socket:NotifyDataSent(0x558ca1a2e690, 100)
GameServer:ScheduleDisplay(0x558ca1a2d4e0)
GameServer:Display(0x558ca1a2d4e0)
Next Frame is 0000000000000000000000100011011100000000000000000000000000000000000000000000000000000000000000000000
GameServer:SendFrame(0x558ca1a2d4e0)
GameServer:NextFrame(0x558ca1a2d4e0)
Frame Dimension: 100
Socket:Send(0x558ca1a2e690, 0x558ca1a33100)
UdpSocketImpl:Send(0x558ca1a2e690, 0x558ca1a33100, 0)
UdpSocketImpl:DoSend(0x558ca1a2e690, 0x558ca1a33100)
UdpSocketImpl:DoSendTo(0x558ca1a2e690, 0x558ca1a33100, 10.1.1.1, 8080, 0)
UdpSocketImpl:GetTxAvailable()
Socket:SocketSetDontFragmentTag(0x7fff39457950)
Socket:Disable(0x7fff39457950)
Socket:GetSerializedSize(0x7fff39457950)
Socket:Serialize(0x7fff39457950, 0x7fff394576c0)
Ipv4L3Protocol:GetRoutingProtocol(0x558ca1a2a7e0)
Ipv4L3Protocol:GetRoutingProtocol(0x558ca1a2a7e0)
Ipv4L3Protocol:SourceAddressSelection(0x558ca1a2a7e0, 1, " ", 10.1.1.0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetAddress(0x558ca1a2b310, 0)
Ipv4L3Protocol:GetNetDevice(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetDevice(0x558ca1a2b310)
Route exists
Ipv4L3Protocol:GetInterfaceForDevice(0x558ca1a2a7e0, 0x558ca1a242c0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetAddress(0x558ca1a2b310, 0)
UdpL4Protocol:Send(0x558ca1a2bb60, 0x558ca1a332e0, 10.1.1.2, 10.1.1.1, 49153, 8080, 0x558ca1a33430)
Ipv4L3Protocol:Send(0x558ca1a2a7e0, 0x558ca1a332e0, 10.1.1.2, 10.1.1.1, 17, 0x558ca1a33430)
Socket:SocketIpTtlTag(0x7fff394574e0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 0)
Ipv4Interface:GetNAddresses(0x558ca1a29cc0)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 0)
Ipv4Interface:GetAddress(0x558ca1a29cc0, 0)
Testing address 127.0.0.1 with mask 255.0.0.0
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 0)
Ipv4Interface:GetNAddresses(0x558ca1a29cc0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetAddress(0x558ca1a2b310, 0)
Testing address 10.1.1.2 with mask 255.255.255.0
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol::Send case 3:  passed in with route
Ipv4L3Protocol:BuildHeader(0x558ca1a2a7e0, 10.1.1.2, 10.1.1.1, 17, 108, 64, 0, 1)
Ipv4L3Protocol:GetInterfaceForDevice(0x558ca1a2a7e0, 0x558ca1a242c0)
Ipv4L3Protocol:SendRealOut(0x558ca1a2a7e0, 0x558ca1a33430, 0x558ca1a33450, 0x7fff39457500)
Ipv4L3Protocol:GetInterfaceForDevice(0x558ca1a2a7e0, 0x558ca1a242c0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Send via NetDevice ifIndex 0 ipv4InterfaceIndex 1
Ipv4Interface:IsUp(0x558ca1a2b310)
Send to destination 10.1.1.1
Ipv4Interface:GetDevice(0x558ca1a2b310)
PointToPointNetDevice:GetMtu(0x558ca1a242c0)
Ipv4Interface:Send(0x558ca1a2b310, , 10.1.1.1)
Ipv4Interface:IsUp(0x558ca1a2b310)
PointToPointNetDevice:NeedsArp(0x558ca1a242c0)
Doesn't need ARP
PointToPointNetDevice:GetBroadcast(0x558ca1a242c0)
TrafficControlLayer:Send(0x558ca1a2bc90, 0x558ca1a242c0, 0x558ca1a32cb0)
Send packet to device 0x558ca1a242c0 protocol number 2048
PointToPointNetDevice:Send(0x558ca1a242c0, 0x558ca1a33450, 02-06-ff:ff:ff:ff:ff:ff, 2048)
PointToPointNetDevice:IsLinkUp(0x558ca1a242c0)
PointToPointNetDevice:AddHeader(0x558ca1a242c0, 0x558ca1a33450, 2048)
PointToPointNetDevice:EtherToPpp()
PointToPointNetDevice:GetMtu(0x558ca1a242c0)
Socket:NotifyDataSent(0x558ca1a2e690, 100)
GameServer:ScheduleDisplay(0x558ca1a2d4e0)
GameServer:Display(0x558ca1a2d4e0)
Next Frame is 0001000000000000000000000000000010001101110000000000000000000000000000000000000000000000000000000000
GameServer:SendFrame(0x558ca1a2d4e0)
GameServer:NextFrame(0x558ca1a2d4e0)
Frame Dimension: 100
Socket:Send(0x558ca1a2e690, 0x558ca1a332e0)
UdpSocketImpl:Send(0x558ca1a2e690, 0x558ca1a332e0, 0)
UdpSocketImpl:DoSend(0x558ca1a2e690, 0x558ca1a332e0)
UdpSocketImpl:DoSendTo(0x558ca1a2e690, 0x558ca1a332e0, 10.1.1.1, 8080, 0)
UdpSocketImpl:GetTxAvailable()
Socket:SocketSetDontFragmentTag(0x7fff39457950)
Socket:Disable(0x7fff39457950)
Socket:GetSerializedSize(0x7fff39457950)
Socket:Serialize(0x7fff39457950, 0x7fff394576c0)
Ipv4L3Protocol:GetRoutingProtocol(0x558ca1a2a7e0)
Ipv4L3Protocol:GetRoutingProtocol(0x558ca1a2a7e0)
Ipv4L3Protocol:SourceAddressSelection(0x558ca1a2a7e0, 1, " ", 10.1.1.0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetAddress(0x558ca1a2b310, 0)
Ipv4L3Protocol:GetNetDevice(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetDevice(0x558ca1a2b310)
Route exists
Ipv4L3Protocol:GetInterfaceForDevice(0x558ca1a2a7e0, 0x558ca1a242c0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetAddress(0x558ca1a2b310, 0)
UdpL4Protocol:Send(0x558ca1a2bb60, 0x558ca1a334c0, 10.1.1.2, 10.1.1.1, 49153, 8080, 0x558ca1a33610)
Ipv4L3Protocol:Send(0x558ca1a2a7e0, 0x558ca1a334c0, 10.1.1.2, 10.1.1.1, 17, 0x558ca1a33610)
Socket:SocketIpTtlTag(0x7fff394574e0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 0)
Ipv4Interface:GetNAddresses(0x558ca1a29cc0)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 0)
Ipv4Interface:GetAddress(0x558ca1a29cc0, 0)
Testing address 127.0.0.1 with mask 255.0.0.0
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 0)
Ipv4Interface:GetNAddresses(0x558ca1a29cc0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetAddress(0x558ca1a2b310, 0)
Testing address 10.1.1.2 with mask 255.255.255.0
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol::Send case 3:  passed in with route
Ipv4L3Protocol:BuildHeader(0x558ca1a2a7e0, 10.1.1.2, 10.1.1.1, 17, 108, 64, 0, 1)
Ipv4L3Protocol:GetInterfaceForDevice(0x558ca1a2a7e0, 0x558ca1a242c0)
Ipv4L3Protocol:SendRealOut(0x558ca1a2a7e0, 0x558ca1a33610, 0x558ca1a33630, 0x7fff39457500)
Ipv4L3Protocol:GetInterfaceForDevice(0x558ca1a2a7e0, 0x558ca1a242c0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Send via NetDevice ifIndex 0 ipv4InterfaceIndex 1
Ipv4Interface:IsUp(0x558ca1a2b310)
Send to destination 10.1.1.1
Ipv4Interface:GetDevice(0x558ca1a2b310)
PointToPointNetDevice:GetMtu(0x558ca1a242c0)
Ipv4Interface:Send(0x558ca1a2b310, , 10.1.1.1)
Ipv4Interface:IsUp(0x558ca1a2b310)
PointToPointNetDevice:NeedsArp(0x558ca1a242c0)
Doesn't need ARP
PointToPointNetDevice:GetBroadcast(0x558ca1a242c0)
TrafficControlLayer:Send(0x558ca1a2bc90, 0x558ca1a242c0, 0x558ca1a32cb0)
Send packet to device 0x558ca1a242c0 protocol number 2048
PointToPointNetDevice:Send(0x558ca1a242c0, 0x558ca1a33630, 02-06-ff:ff:ff:ff:ff:ff, 2048)
PointToPointNetDevice:IsLinkUp(0x558ca1a242c0)
PointToPointNetDevice:AddHeader(0x558ca1a242c0, 0x558ca1a33630, 2048)
PointToPointNetDevice:EtherToPpp()
PointToPointNetDevice:GetMtu(0x558ca1a242c0)
Socket:NotifyDataSent(0x558ca1a2e690, 100)
GameServer:ScheduleDisplay(0x558ca1a2d4e0)
GameServer:Display(0x558ca1a2d4e0)
Next Frame is 0000000100000100000000000000000000000000001000110111000000000000000000000000000000000000000000000000
GameServer:SendFrame(0x558ca1a2d4e0)
GameServer:NextFrame(0x558ca1a2d4e0)
Frame Dimension: 100
Socket:Send(0x558ca1a2e690, 0x558ca1a334c0)
UdpSocketImpl:Send(0x558ca1a2e690, 0x558ca1a334c0, 0)
UdpSocketImpl:DoSend(0x558ca1a2e690, 0x558ca1a334c0)
UdpSocketImpl:DoSendTo(0x558ca1a2e690, 0x558ca1a334c0, 10.1.1.1, 8080, 0)
UdpSocketImpl:GetTxAvailable()
Socket:SocketSetDontFragmentTag(0x7fff39457950)
Socket:Disable(0x7fff39457950)
Socket:GetSerializedSize(0x7fff39457950)
Socket:Serialize(0x7fff39457950, 0x7fff394576c0)
Ipv4L3Protocol:GetRoutingProtocol(0x558ca1a2a7e0)
Ipv4L3Protocol:GetRoutingProtocol(0x558ca1a2a7e0)
Ipv4L3Protocol:SourceAddressSelection(0x558ca1a2a7e0, 1, " ", 10.1.1.0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetAddress(0x558ca1a2b310, 0)
Ipv4L3Protocol:GetNetDevice(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetDevice(0x558ca1a2b310)
Route exists
Ipv4L3Protocol:GetInterfaceForDevice(0x558ca1a2a7e0, 0x558ca1a242c0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetAddress(0x558ca1a2b310, 0)
UdpL4Protocol:Send(0x558ca1a2bb60, 0x558ca1a336a0, 10.1.1.2, 10.1.1.1, 49153, 8080, 0x558ca1a337f0)
Ipv4L3Protocol:Send(0x558ca1a2a7e0, 0x558ca1a336a0, 10.1.1.2, 10.1.1.1, 17, 0x558ca1a337f0)
Socket:SocketIpTtlTag(0x7fff394574e0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 0)
Ipv4Interface:GetNAddresses(0x558ca1a29cc0)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 0)
Ipv4Interface:GetAddress(0x558ca1a29cc0, 0)
Testing address 127.0.0.1 with mask 255.0.0.0
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 0)
Ipv4Interface:GetNAddresses(0x558ca1a29cc0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetAddress(0x558ca1a2b310, 0)
Testing address 10.1.1.2 with mask 255.255.255.0
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol::Send case 3:  passed in with route
Ipv4L3Protocol:BuildHeader(0x558ca1a2a7e0, 10.1.1.2, 10.1.1.1, 17, 108, 64, 0, 1)
Ipv4L3Protocol:GetInterfaceForDevice(0x558ca1a2a7e0, 0x558ca1a242c0)
Ipv4L3Protocol:SendRealOut(0x558ca1a2a7e0, 0x558ca1a337f0, 0x558ca1a33810, 0x7fff39457500)
Ipv4L3Protocol:GetInterfaceForDevice(0x558ca1a2a7e0, 0x558ca1a242c0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Send via NetDevice ifIndex 0 ipv4InterfaceIndex 1
Ipv4Interface:IsUp(0x558ca1a2b310)
Send to destination 10.1.1.1
Ipv4Interface:GetDevice(0x558ca1a2b310)
PointToPointNetDevice:GetMtu(0x558ca1a242c0)
Ipv4Interface:Send(0x558ca1a2b310, , 10.1.1.1)
Ipv4Interface:IsUp(0x558ca1a2b310)
PointToPointNetDevice:NeedsArp(0x558ca1a242c0)
Doesn't need ARP
PointToPointNetDevice:GetBroadcast(0x558ca1a242c0)
TrafficControlLayer:Send(0x558ca1a2bc90, 0x558ca1a242c0, 0x558ca1a32cb0)
Send packet to device 0x558ca1a242c0 protocol number 2048
PointToPointNetDevice:Send(0x558ca1a242c0, 0x558ca1a33810, 02-06-ff:ff:ff:ff:ff:ff, 2048)
PointToPointNetDevice:IsLinkUp(0x558ca1a242c0)
PointToPointNetDevice:AddHeader(0x558ca1a242c0, 0x558ca1a33810, 2048)
PointToPointNetDevice:EtherToPpp()
PointToPointNetDevice:GetMtu(0x558ca1a242c0)
Socket:NotifyDataSent(0x558ca1a2e690, 100)
GameServer:ScheduleDisplay(0x558ca1a2d4e0)
GameServer:Display(0x558ca1a2d4e0)
Next Frame is 1000000000000000010000010000000000000000000000000000100011011100000000000000000000000000000000000000
GameServer:SendFrame(0x558ca1a2d4e0)
GameServer:NextFrame(0x558ca1a2d4e0)
Frame Dimension: 100
Socket:Send(0x558ca1a2e690, 0x558ca1a336a0)
UdpSocketImpl:Send(0x558ca1a2e690, 0x558ca1a336a0, 0)
UdpSocketImpl:DoSend(0x558ca1a2e690, 0x558ca1a336a0)
UdpSocketImpl:DoSendTo(0x558ca1a2e690, 0x558ca1a336a0, 10.1.1.1, 8080, 0)
UdpSocketImpl:GetTxAvailable()
Socket:SocketSetDontFragmentTag(0x7fff39457950)
Socket:Disable(0x7fff39457950)
Socket:GetSerializedSize(0x7fff39457950)
Socket:Serialize(0x7fff39457950, 0x7fff394576c0)
Ipv4L3Protocol:GetRoutingProtocol(0x558ca1a2a7e0)
Ipv4L3Protocol:GetRoutingProtocol(0x558ca1a2a7e0)
Ipv4L3Protocol:SourceAddressSelection(0x558ca1a2a7e0, 1, " ", 10.1.1.0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetAddress(0x558ca1a2b310, 0)
Ipv4L3Protocol:GetNetDevice(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetDevice(0x558ca1a2b310)
Route exists
Ipv4L3Protocol:GetInterfaceForDevice(0x558ca1a2a7e0, 0x558ca1a242c0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetAddress(0x558ca1a2b310, 0)
UdpL4Protocol:Send(0x558ca1a2bb60, 0x558ca1a33880, 10.1.1.2, 10.1.1.1, 49153, 8080, 0x558ca1a339d0)
Ipv4L3Protocol:Send(0x558ca1a2a7e0, 0x558ca1a33880, 10.1.1.2, 10.1.1.1, 17, 0x558ca1a339d0)
Socket:SocketIpTtlTag(0x7fff394574e0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 0)
Ipv4Interface:GetNAddresses(0x558ca1a29cc0)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 0)
Ipv4Interface:GetAddress(0x558ca1a29cc0, 0)
Testing address 127.0.0.1 with mask 255.0.0.0
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 0)
Ipv4Interface:GetNAddresses(0x558ca1a29cc0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetAddress(0x558ca1a2b310, 0)
Testing address 10.1.1.2 with mask 255.255.255.0
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol::Send case 3:  passed in with route
Ipv4L3Protocol:BuildHeader(0x558ca1a2a7e0, 10.1.1.2, 10.1.1.1, 17, 108, 64, 0, 1)
Ipv4L3Protocol:GetInterfaceForDevice(0x558ca1a2a7e0, 0x558ca1a242c0)
Ipv4L3Protocol:SendRealOut(0x558ca1a2a7e0, 0x558ca1a339d0, 0x558ca1a339f0, 0x7fff39457500)
Ipv4L3Protocol:GetInterfaceForDevice(0x558ca1a2a7e0, 0x558ca1a242c0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Send via NetDevice ifIndex 0 ipv4InterfaceIndex 1
Ipv4Interface:IsUp(0x558ca1a2b310)
Send to destination 10.1.1.1
Ipv4Interface:GetDevice(0x558ca1a2b310)
PointToPointNetDevice:GetMtu(0x558ca1a242c0)
Ipv4Interface:Send(0x558ca1a2b310, , 10.1.1.1)
Ipv4Interface:IsUp(0x558ca1a2b310)
PointToPointNetDevice:NeedsArp(0x558ca1a242c0)
Doesn't need ARP
PointToPointNetDevice:GetBroadcast(0x558ca1a242c0)
TrafficControlLayer:Send(0x558ca1a2bc90, 0x558ca1a242c0, 0x558ca1a32cb0)
Send packet to device 0x558ca1a242c0 protocol number 2048
PointToPointNetDevice:Send(0x558ca1a242c0, 0x558ca1a339f0, 02-06-ff:ff:ff:ff:ff:ff, 2048)
PointToPointNetDevice:IsLinkUp(0x558ca1a242c0)
PointToPointNetDevice:AddHeader(0x558ca1a242c0, 0x558ca1a339f0, 2048)
PointToPointNetDevice:EtherToPpp()
PointToPointNetDevice:GetMtu(0x558ca1a242c0)
Socket:NotifyDataSent(0x558ca1a2e690, 100)
GameServer:ScheduleDisplay(0x558ca1a2d4e0)
GameServer:Display(0x558ca1a2d4e0)
Next Frame is 0000000001100000000000000001000001000000000000000000000000000010001101110000000000000000000000000000
GameServer:SendFrame(0x558ca1a2d4e0)
GameServer:NextFrame(0x558ca1a2d4e0)
Frame Dimension: 100
Socket:Send(0x558ca1a2e690, 0x558ca1a33880)
UdpSocketImpl:Send(0x558ca1a2e690, 0x558ca1a33880, 0)
UdpSocketImpl:DoSend(0x558ca1a2e690, 0x558ca1a33880)
UdpSocketImpl:DoSendTo(0x558ca1a2e690, 0x558ca1a33880, 10.1.1.1, 8080, 0)
UdpSocketImpl:GetTxAvailable()
Socket:SocketSetDontFragmentTag(0x7fff39457950)
Socket:Disable(0x7fff39457950)
Socket:GetSerializedSize(0x7fff39457950)
Socket:Serialize(0x7fff39457950, 0x7fff394576c0)
Ipv4L3Protocol:GetRoutingProtocol(0x558ca1a2a7e0)
Ipv4L3Protocol:GetRoutingProtocol(0x558ca1a2a7e0)
Ipv4L3Protocol:SourceAddressSelection(0x558ca1a2a7e0, 1, " ", 10.1.1.0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetAddress(0x558ca1a2b310, 0)
Ipv4L3Protocol:GetNetDevice(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetDevice(0x558ca1a2b310)
Route exists
Ipv4L3Protocol:GetInterfaceForDevice(0x558ca1a2a7e0, 0x558ca1a242c0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetAddress(0x558ca1a2b310, 0)
UdpL4Protocol:Send(0x558ca1a2bb60, 0x558ca1a33a60, 10.1.1.2, 10.1.1.1, 49153, 8080, 0x558ca1a33bb0)
Ipv4L3Protocol:Send(0x558ca1a2a7e0, 0x558ca1a33a60, 10.1.1.2, 10.1.1.1, 17, 0x558ca1a33bb0)
Socket:SocketIpTtlTag(0x7fff394574e0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 0)
Ipv4Interface:GetNAddresses(0x558ca1a29cc0)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 0)
Ipv4Interface:GetAddress(0x558ca1a29cc0, 0)
Testing address 127.0.0.1 with mask 255.0.0.0
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 0)
Ipv4Interface:GetNAddresses(0x558ca1a29cc0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetAddress(0x558ca1a2b310, 0)
Testing address 10.1.1.2 with mask 255.255.255.0
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol::Send case 3:  passed in with route
Ipv4L3Protocol:BuildHeader(0x558ca1a2a7e0, 10.1.1.2, 10.1.1.1, 17, 108, 64, 0, 1)
Ipv4L3Protocol:GetInterfaceForDevice(0x558ca1a2a7e0, 0x558ca1a242c0)
Ipv4L3Protocol:SendRealOut(0x558ca1a2a7e0, 0x558ca1a33bb0, 0x558ca1a33bd0, 0x7fff39457500)
Ipv4L3Protocol:GetInterfaceForDevice(0x558ca1a2a7e0, 0x558ca1a242c0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Send via NetDevice ifIndex 0 ipv4InterfaceIndex 1
Ipv4Interface:IsUp(0x558ca1a2b310)
Send to destination 10.1.1.1
Ipv4Interface:GetDevice(0x558ca1a2b310)
PointToPointNetDevice:GetMtu(0x558ca1a242c0)
Ipv4Interface:Send(0x558ca1a2b310, , 10.1.1.1)
Ipv4Interface:IsUp(0x558ca1a2b310)
PointToPointNetDevice:NeedsArp(0x558ca1a242c0)
Doesn't need ARP
PointToPointNetDevice:GetBroadcast(0x558ca1a242c0)
TrafficControlLayer:Send(0x558ca1a2bc90, 0x558ca1a242c0, 0x558ca1a32cb0)
Send packet to device 0x558ca1a242c0 protocol number 2048
PointToPointNetDevice:Send(0x558ca1a242c0, 0x558ca1a33bd0, 02-06-ff:ff:ff:ff:ff:ff, 2048)
PointToPointNetDevice:IsLinkUp(0x558ca1a242c0)
PointToPointNetDevice:AddHeader(0x558ca1a242c0, 0x558ca1a33bd0, 2048)
PointToPointNetDevice:EtherToPpp()
PointToPointNetDevice:GetMtu(0x558ca1a242c0)
Socket:NotifyDataSent(0x558ca1a2e690, 100)
GameServer:ScheduleDisplay(0x558ca1a2d4e0)
GameServer:Display(0x558ca1a2d4e0)
Next Frame is 0000000000000000000110000000000000000100000100000000000000000000000000001000110111000000000000000000
GameServer:SendFrame(0x558ca1a2d4e0)
GameServer:NextFrame(0x558ca1a2d4e0)
Frame Dimension: 100
Socket:Send(0x558ca1a2e690, 0x558ca1a33a60)
UdpSocketImpl:Send(0x558ca1a2e690, 0x558ca1a33a60, 0)
UdpSocketImpl:DoSend(0x558ca1a2e690, 0x558ca1a33a60)
UdpSocketImpl:DoSendTo(0x558ca1a2e690, 0x558ca1a33a60, 10.1.1.1, 8080, 0)
UdpSocketImpl:GetTxAvailable()
Socket:SocketSetDontFragmentTag(0x7fff39457950)
Socket:Disable(0x7fff39457950)
Socket:GetSerializedSize(0x7fff39457950)
Socket:Serialize(0x7fff39457950, 0x7fff394576c0)
Ipv4L3Protocol:GetRoutingProtocol(0x558ca1a2a7e0)
Ipv4L3Protocol:GetRoutingProtocol(0x558ca1a2a7e0)
Ipv4L3Protocol:SourceAddressSelection(0x558ca1a2a7e0, 1, " ", 10.1.1.0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetAddress(0x558ca1a2b310, 0)
Ipv4L3Protocol:GetNetDevice(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetDevice(0x558ca1a2b310)
Route exists
Ipv4L3Protocol:GetInterfaceForDevice(0x558ca1a2a7e0, 0x558ca1a242c0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetAddress(0x558ca1a2b310, 0)
UdpL4Protocol:Send(0x558ca1a2bb60, 0x558ca1a33c40, 10.1.1.2, 10.1.1.1, 49153, 8080, 0x558ca1a33d90)
Ipv4L3Protocol:Send(0x558ca1a2a7e0, 0x558ca1a33c40, 10.1.1.2, 10.1.1.1, 17, 0x558ca1a33d90)
Socket:SocketIpTtlTag(0x7fff394574e0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 0)
Ipv4Interface:GetNAddresses(0x558ca1a29cc0)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 0)
Ipv4Interface:GetAddress(0x558ca1a29cc0, 0)
Testing address 127.0.0.1 with mask 255.0.0.0
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 0)
Ipv4Interface:GetNAddresses(0x558ca1a29cc0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetAddress(0x558ca1a2b310, 0)
Testing address 10.1.1.2 with mask 255.255.255.0
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol::Send case 3:  passed in with route
Ipv4L3Protocol:BuildHeader(0x558ca1a2a7e0, 10.1.1.2, 10.1.1.1, 17, 108, 64, 0, 1)
Ipv4L3Protocol:GetInterfaceForDevice(0x558ca1a2a7e0, 0x558ca1a242c0)
Ipv4L3Protocol:SendRealOut(0x558ca1a2a7e0, 0x558ca1a33d90, 0x558ca1a33db0, 0x7fff39457500)
Ipv4L3Protocol:GetInterfaceForDevice(0x558ca1a2a7e0, 0x558ca1a242c0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Send via NetDevice ifIndex 0 ipv4InterfaceIndex 1
Ipv4Interface:IsUp(0x558ca1a2b310)
Send to destination 10.1.1.1
Ipv4Interface:GetDevice(0x558ca1a2b310)
PointToPointNetDevice:GetMtu(0x558ca1a242c0)
Ipv4Interface:Send(0x558ca1a2b310, , 10.1.1.1)
Ipv4Interface:IsUp(0x558ca1a2b310)
PointToPointNetDevice:NeedsArp(0x558ca1a242c0)
Doesn't need ARP
PointToPointNetDevice:GetBroadcast(0x558ca1a242c0)
TrafficControlLayer:Send(0x558ca1a2bc90, 0x558ca1a242c0, 0x558ca1a32cb0)
Send packet to device 0x558ca1a242c0 protocol number 2048
PointToPointNetDevice:Send(0x558ca1a242c0, 0x558ca1a33db0, 02-06-ff:ff:ff:ff:ff:ff, 2048)
PointToPointNetDevice:IsLinkUp(0x558ca1a242c0)
PointToPointNetDevice:AddHeader(0x558ca1a242c0, 0x558ca1a33db0, 2048)
PointToPointNetDevice:EtherToPpp()
PointToPointNetDevice:GetMtu(0x558ca1a242c0)
Socket:NotifyDataSent(0x558ca1a2e690, 100)
GameServer:ScheduleDisplay(0x558ca1a2d4e0)
GameServer:Display(0x558ca1a2d4e0)
Next Frame is 0000000000000000000000000000011000000000000000010000010000000000000000000000000000100011011100000000
GameServer:SendFrame(0x558ca1a2d4e0)
GameServer:NextFrame(0x558ca1a2d4e0)
Frame Dimension: 100
Socket:Send(0x558ca1a2e690, 0x558ca1a33c40)
UdpSocketImpl:Send(0x558ca1a2e690, 0x558ca1a33c40, 0)
UdpSocketImpl:DoSend(0x558ca1a2e690, 0x558ca1a33c40)
UdpSocketImpl:DoSendTo(0x558ca1a2e690, 0x558ca1a33c40, 10.1.1.1, 8080, 0)
UdpSocketImpl:GetTxAvailable()
Socket:SocketSetDontFragmentTag(0x7fff39457950)
Socket:Disable(0x7fff39457950)
Socket:GetSerializedSize(0x7fff39457950)
Socket:Serialize(0x7fff39457950, 0x7fff394576c0)
Ipv4L3Protocol:GetRoutingProtocol(0x558ca1a2a7e0)
Ipv4L3Protocol:GetRoutingProtocol(0x558ca1a2a7e0)
Ipv4L3Protocol:SourceAddressSelection(0x558ca1a2a7e0, 1, " ", 10.1.1.0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetAddress(0x558ca1a2b310, 0)
Ipv4L3Protocol:GetNetDevice(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetDevice(0x558ca1a2b310)
Route exists
Ipv4L3Protocol:GetInterfaceForDevice(0x558ca1a2a7e0, 0x558ca1a242c0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetAddress(0x558ca1a2b310, 0)
UdpL4Protocol:Send(0x558ca1a2bb60, 0x558ca1a33e20, 10.1.1.2, 10.1.1.1, 49153, 8080, 0x558ca1a33f70)
Ipv4L3Protocol:Send(0x558ca1a2a7e0, 0x558ca1a33e20, 10.1.1.2, 10.1.1.1, 17, 0x558ca1a33f70)
Socket:SocketIpTtlTag(0x7fff394574e0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 0)
Ipv4Interface:GetNAddresses(0x558ca1a29cc0)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 0)
Ipv4Interface:GetAddress(0x558ca1a29cc0, 0)
Testing address 127.0.0.1 with mask 255.0.0.0
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 0)
Ipv4Interface:GetNAddresses(0x558ca1a29cc0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetAddress(0x558ca1a2b310, 0)
Testing address 10.1.1.2 with mask 255.255.255.0
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol::Send case 3:  passed in with route
Ipv4L3Protocol:BuildHeader(0x558ca1a2a7e0, 10.1.1.2, 10.1.1.1, 17, 108, 64, 0, 1)
Ipv4L3Protocol:GetInterfaceForDevice(0x558ca1a2a7e0, 0x558ca1a242c0)
Ipv4L3Protocol:SendRealOut(0x558ca1a2a7e0, 0x558ca1a33f70, 0x558ca1a33f90, 0x7fff39457500)
Ipv4L3Protocol:GetInterfaceForDevice(0x558ca1a2a7e0, 0x558ca1a242c0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Send via NetDevice ifIndex 0 ipv4InterfaceIndex 1
Ipv4Interface:IsUp(0x558ca1a2b310)
Send to destination 10.1.1.1
Ipv4Interface:GetDevice(0x558ca1a2b310)
PointToPointNetDevice:GetMtu(0x558ca1a242c0)
Ipv4Interface:Send(0x558ca1a2b310, , 10.1.1.1)
Ipv4Interface:IsUp(0x558ca1a2b310)
PointToPointNetDevice:NeedsArp(0x558ca1a242c0)
Doesn't need ARP
PointToPointNetDevice:GetBroadcast(0x558ca1a242c0)
TrafficControlLayer:Send(0x558ca1a2bc90, 0x558ca1a242c0, 0x558ca1a32cb0)
Send packet to device 0x558ca1a242c0 protocol number 2048
PointToPointNetDevice:Send(0x558ca1a242c0, 0x558ca1a33f90, 02-06-ff:ff:ff:ff:ff:ff, 2048)
PointToPointNetDevice:IsLinkUp(0x558ca1a242c0)
PointToPointNetDevice:AddHeader(0x558ca1a242c0, 0x558ca1a33f90, 2048)
PointToPointNetDevice:EtherToPpp()
PointToPointNetDevice:GetMtu(0x558ca1a242c0)
Socket:NotifyDataSent(0x558ca1a2e690, 100)
GameServer:ScheduleDisplay(0x558ca1a2d4e0)
GameServer:Display(0x558ca1a2d4e0)
Next Frame is 0000101000000000000000000000000000000001100000000000000001000001000000000000000000000000000010001101
GameServer:SendFrame(0x558ca1a2d4e0)
GameServer:NextFrame(0x558ca1a2d4e0)
Frame Dimension: 100
Socket:Send(0x558ca1a2e690, 0x558ca1a33e20)
UdpSocketImpl:Send(0x558ca1a2e690, 0x558ca1a33e20, 0)
UdpSocketImpl:DoSend(0x558ca1a2e690, 0x558ca1a33e20)
UdpSocketImpl:DoSendTo(0x558ca1a2e690, 0x558ca1a33e20, 10.1.1.1, 8080, 0)
UdpSocketImpl:GetTxAvailable()
Socket:SocketSetDontFragmentTag(0x7fff39457950)
Socket:Disable(0x7fff39457950)
Socket:GetSerializedSize(0x7fff39457950)
Socket:Serialize(0x7fff39457950, 0x7fff394576c0)
Ipv4L3Protocol:GetRoutingProtocol(0x558ca1a2a7e0)
Ipv4L3Protocol:GetRoutingProtocol(0x558ca1a2a7e0)
Ipv4L3Protocol:SourceAddressSelection(0x558ca1a2a7e0, 1, " ", 10.1.1.0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetAddress(0x558ca1a2b310, 0)
Ipv4L3Protocol:GetNetDevice(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetDevice(0x558ca1a2b310)
Route exists
Ipv4L3Protocol:GetInterfaceForDevice(0x558ca1a2a7e0, 0x558ca1a242c0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetAddress(0x558ca1a2b310, 0)
UdpL4Protocol:Send(0x558ca1a2bb60, 0x558ca1a34000, 10.1.1.2, 10.1.1.1, 49153, 8080, 0x558ca1a34150)
Ipv4L3Protocol:Send(0x558ca1a2a7e0, 0x558ca1a34000, 10.1.1.2, 10.1.1.1, 17, 0x558ca1a34150)
Socket:SocketIpTtlTag(0x7fff394574e0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 0)
Ipv4Interface:GetNAddresses(0x558ca1a29cc0)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 0)
Ipv4Interface:GetAddress(0x558ca1a29cc0, 0)
Testing address 127.0.0.1 with mask 255.0.0.0
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 0)
Ipv4Interface:GetNAddresses(0x558ca1a29cc0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetAddress(0x558ca1a2b310, 0)
Testing address 10.1.1.2 with mask 255.255.255.0
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol::Send case 3:  passed in with route
Ipv4L3Protocol:BuildHeader(0x558ca1a2a7e0, 10.1.1.2, 10.1.1.1, 17, 108, 64, 0, 1)
Ipv4L3Protocol:GetInterfaceForDevice(0x558ca1a2a7e0, 0x558ca1a242c0)
Ipv4L3Protocol:SendRealOut(0x558ca1a2a7e0, 0x558ca1a34150, 0x558ca1a34170, 0x7fff39457500)
Ipv4L3Protocol:GetInterfaceForDevice(0x558ca1a2a7e0, 0x558ca1a242c0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Send via NetDevice ifIndex 0 ipv4InterfaceIndex 1
Ipv4Interface:IsUp(0x558ca1a2b310)
Send to destination 10.1.1.1
Ipv4Interface:GetDevice(0x558ca1a2b310)
PointToPointNetDevice:GetMtu(0x558ca1a242c0)
Ipv4Interface:Send(0x558ca1a2b310, , 10.1.1.1)
Ipv4Interface:IsUp(0x558ca1a2b310)
PointToPointNetDevice:NeedsArp(0x558ca1a242c0)
Doesn't need ARP
PointToPointNetDevice:GetBroadcast(0x558ca1a242c0)
TrafficControlLayer:Send(0x558ca1a2bc90, 0x558ca1a242c0, 0x558ca1a32cb0)
Send packet to device 0x558ca1a242c0 protocol number 2048
PointToPointNetDevice:Send(0x558ca1a242c0, 0x558ca1a34170, 02-06-ff:ff:ff:ff:ff:ff, 2048)
PointToPointNetDevice:IsLinkUp(0x558ca1a242c0)
PointToPointNetDevice:AddHeader(0x558ca1a242c0, 0x558ca1a34170, 2048)
PointToPointNetDevice:EtherToPpp()
PointToPointNetDevice:GetMtu(0x558ca1a242c0)
Socket:NotifyDataSent(0x558ca1a2e690, 100)
GameServer:ScheduleDisplay(0x558ca1a2d4e0)
GameServer:Display(0x558ca1a2d4e0)
Next Frame is 0000010001000010100000000000000000000000000000000110000000000000000100000100000000000000000000000000
GameServer:SendFrame(0x558ca1a2d4e0)
GameServer:NextFrame(0x558ca1a2d4e0)
Frame Dimension: 100
Socket:Send(0x558ca1a2e690, 0x558ca1a34000)
UdpSocketImpl:Send(0x558ca1a2e690, 0x558ca1a34000, 0)
UdpSocketImpl:DoSend(0x558ca1a2e690, 0x558ca1a34000)
UdpSocketImpl:DoSendTo(0x558ca1a2e690, 0x558ca1a34000, 10.1.1.1, 8080, 0)
UdpSocketImpl:GetTxAvailable()
Socket:SocketSetDontFragmentTag(0x7fff39457950)
Socket:Disable(0x7fff39457950)
Socket:GetSerializedSize(0x7fff39457950)
Socket:Serialize(0x7fff39457950, 0x7fff394576c0)
Ipv4L3Protocol:GetRoutingProtocol(0x558ca1a2a7e0)
Ipv4L3Protocol:GetRoutingProtocol(0x558ca1a2a7e0)
Ipv4L3Protocol:SourceAddressSelection(0x558ca1a2a7e0, 1, " ", 10.1.1.0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetAddress(0x558ca1a2b310, 0)
Ipv4L3Protocol:GetNetDevice(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetDevice(0x558ca1a2b310)
Route exists
Ipv4L3Protocol:GetInterfaceForDevice(0x558ca1a2a7e0, 0x558ca1a242c0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetAddress(0x558ca1a2b310, 0)
UdpL4Protocol:Send(0x558ca1a2bb60, 0x558ca1a341e0, 10.1.1.2, 10.1.1.1, 49153, 8080, 0x558ca1a34330)
Ipv4L3Protocol:Send(0x558ca1a2a7e0, 0x558ca1a341e0, 10.1.1.2, 10.1.1.1, 17, 0x558ca1a34330)
Socket:SocketIpTtlTag(0x7fff394574e0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 0)
Ipv4Interface:GetNAddresses(0x558ca1a29cc0)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 0)
Ipv4Interface:GetAddress(0x558ca1a29cc0, 0)
Testing address 127.0.0.1 with mask 255.0.0.0
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 0)
Ipv4Interface:GetNAddresses(0x558ca1a29cc0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetAddress(0x558ca1a2b310, 0)
Testing address 10.1.1.2 with mask 255.255.255.0
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol::Send case 3:  passed in with route
Ipv4L3Protocol:BuildHeader(0x558ca1a2a7e0, 10.1.1.2, 10.1.1.1, 17, 108, 64, 0, 1)
Ipv4L3Protocol:GetInterfaceForDevice(0x558ca1a2a7e0, 0x558ca1a242c0)
Ipv4L3Protocol:SendRealOut(0x558ca1a2a7e0, 0x558ca1a34330, 0x558ca1a34350, 0x7fff39457500)
Ipv4L3Protocol:GetInterfaceForDevice(0x558ca1a2a7e0, 0x558ca1a242c0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Send via NetDevice ifIndex 0 ipv4InterfaceIndex 1
Ipv4Interface:IsUp(0x558ca1a2b310)
Send to destination 10.1.1.1
Ipv4Interface:GetDevice(0x558ca1a2b310)
PointToPointNetDevice:GetMtu(0x558ca1a242c0)
Ipv4Interface:Send(0x558ca1a2b310, , 10.1.1.1)
Ipv4Interface:IsUp(0x558ca1a2b310)
PointToPointNetDevice:NeedsArp(0x558ca1a242c0)
Doesn't need ARP
PointToPointNetDevice:GetBroadcast(0x558ca1a242c0)
TrafficControlLayer:Send(0x558ca1a2bc90, 0x558ca1a242c0, 0x558ca1a32cb0)
Send packet to device 0x558ca1a242c0 protocol number 2048
PointToPointNetDevice:Send(0x558ca1a242c0, 0x558ca1a34350, 02-06-ff:ff:ff:ff:ff:ff, 2048)
PointToPointNetDevice:IsLinkUp(0x558ca1a242c0)
PointToPointNetDevice:AddHeader(0x558ca1a242c0, 0x558ca1a34350, 2048)
PointToPointNetDevice:EtherToPpp()
PointToPointNetDevice:GetMtu(0x558ca1a242c0)
Socket:NotifyDataSent(0x558ca1a2e690, 100)
GameServer:ScheduleDisplay(0x558ca1a2d4e0)
GameServer:Display(0x558ca1a2d4e0)
Next Frame is 0010000000000001000100001010000000000000000000000000000000011000000000000000010000010000000000000000
GameServer:SendFrame(0x558ca1a2d4e0)
GameServer:NextFrame(0x558ca1a2d4e0)
Frame Dimension: 100
Socket:Send(0x558ca1a2e690, 0x558ca1a341e0)
UdpSocketImpl:Send(0x558ca1a2e690, 0x558ca1a341e0, 0)
UdpSocketImpl:DoSend(0x558ca1a2e690, 0x558ca1a341e0)
UdpSocketImpl:DoSendTo(0x558ca1a2e690, 0x558ca1a341e0, 10.1.1.1, 8080, 0)
UdpSocketImpl:GetTxAvailable()
Socket:SocketSetDontFragmentTag(0x7fff39457950)
Socket:Disable(0x7fff39457950)
Socket:GetSerializedSize(0x7fff39457950)
Socket:Serialize(0x7fff39457950, 0x7fff394576c0)
Ipv4L3Protocol:GetRoutingProtocol(0x558ca1a2a7e0)
Ipv4L3Protocol:GetRoutingProtocol(0x558ca1a2a7e0)
Ipv4L3Protocol:SourceAddressSelection(0x558ca1a2a7e0, 1, " ", 10.1.1.0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetAddress(0x558ca1a2b310, 0)
Ipv4L3Protocol:GetNetDevice(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetDevice(0x558ca1a2b310)
Route exists
Ipv4L3Protocol:GetInterfaceForDevice(0x558ca1a2a7e0, 0x558ca1a242c0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetAddress(0x558ca1a2b310, 0)
UdpL4Protocol:Send(0x558ca1a2bb60, 0x558ca1a343c0, 10.1.1.2, 10.1.1.1, 49153, 8080, 0x558ca1a34510)
Ipv4L3Protocol:Send(0x558ca1a2a7e0, 0x558ca1a343c0, 10.1.1.2, 10.1.1.1, 17, 0x558ca1a34510)
Socket:SocketIpTtlTag(0x7fff394574e0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 0)
Ipv4Interface:GetNAddresses(0x558ca1a29cc0)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 0)
Ipv4Interface:GetAddress(0x558ca1a29cc0, 0)
Testing address 127.0.0.1 with mask 255.0.0.0
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 0)
Ipv4Interface:GetNAddresses(0x558ca1a29cc0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetAddress(0x558ca1a2b310, 0)
Testing address 10.1.1.2 with mask 255.255.255.0
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol::Send case 3:  passed in with route
Ipv4L3Protocol:BuildHeader(0x558ca1a2a7e0, 10.1.1.2, 10.1.1.1, 17, 108, 64, 0, 1)
Ipv4L3Protocol:GetInterfaceForDevice(0x558ca1a2a7e0, 0x558ca1a242c0)
Ipv4L3Protocol:SendRealOut(0x558ca1a2a7e0, 0x558ca1a34510, 0x558ca1a34530, 0x7fff39457500)
Ipv4L3Protocol:GetInterfaceForDevice(0x558ca1a2a7e0, 0x558ca1a242c0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Send via NetDevice ifIndex 0 ipv4InterfaceIndex 1
Ipv4Interface:IsUp(0x558ca1a2b310)
Send to destination 10.1.1.1
Ipv4Interface:GetDevice(0x558ca1a2b310)
PointToPointNetDevice:GetMtu(0x558ca1a242c0)
Ipv4Interface:Send(0x558ca1a2b310, , 10.1.1.1)
Ipv4Interface:IsUp(0x558ca1a2b310)
PointToPointNetDevice:NeedsArp(0x558ca1a242c0)
Doesn't need ARP
PointToPointNetDevice:GetBroadcast(0x558ca1a242c0)
TrafficControlLayer:Send(0x558ca1a2bc90, 0x558ca1a242c0, 0x558ca1a32cb0)
Send packet to device 0x558ca1a242c0 protocol number 2048
PointToPointNetDevice:Send(0x558ca1a242c0, 0x558ca1a34530, 02-06-ff:ff:ff:ff:ff:ff, 2048)
PointToPointNetDevice:IsLinkUp(0x558ca1a242c0)
PointToPointNetDevice:AddHeader(0x558ca1a242c0, 0x558ca1a34530, 2048)
PointToPointNetDevice:EtherToPpp()
PointToPointNetDevice:GetMtu(0x558ca1a242c0)
Socket:NotifyDataSent(0x558ca1a2e690, 100)
GameServer:ScheduleDisplay(0x558ca1a2d4e0)
GameServer:Display(0x558ca1a2d4e0)
Next Frame is 0000001000001000000000000100010000101000000000000000000000000000000001100000000000000001000001000000
GameServer:SendFrame(0x558ca1a2d4e0)
GameServer:NextFrame(0x558ca1a2d4e0)
Frame Dimension: 100
Socket:Send(0x558ca1a2e690, 0x558ca1a343c0)
UdpSocketImpl:Send(0x558ca1a2e690, 0x558ca1a343c0, 0)
UdpSocketImpl:DoSend(0x558ca1a2e690, 0x558ca1a343c0)
UdpSocketImpl:DoSendTo(0x558ca1a2e690, 0x558ca1a343c0, 10.1.1.1, 8080, 0)
UdpSocketImpl:GetTxAvailable()
Socket:SocketSetDontFragmentTag(0x7fff39457950)
Socket:Disable(0x7fff39457950)
Socket:GetSerializedSize(0x7fff39457950)
Socket:Serialize(0x7fff39457950, 0x7fff394576c0)
Ipv4L3Protocol:GetRoutingProtocol(0x558ca1a2a7e0)
Ipv4L3Protocol:GetRoutingProtocol(0x558ca1a2a7e0)
Ipv4L3Protocol:SourceAddressSelection(0x558ca1a2a7e0, 1, " ", 10.1.1.0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetAddress(0x558ca1a2b310, 0)
Ipv4L3Protocol:GetNetDevice(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetDevice(0x558ca1a2b310)
Route exists
Ipv4L3Protocol:GetInterfaceForDevice(0x558ca1a2a7e0, 0x558ca1a242c0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetAddress(0x558ca1a2b310, 0)
UdpL4Protocol:Send(0x558ca1a2bb60, 0x558ca1a345a0, 10.1.1.2, 10.1.1.1, 49153, 8080, 0x558ca1a346f0)
Ipv4L3Protocol:Send(0x558ca1a2a7e0, 0x558ca1a345a0, 10.1.1.2, 10.1.1.1, 17, 0x558ca1a346f0)
Socket:SocketIpTtlTag(0x7fff394574e0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 0)
Ipv4Interface:GetNAddresses(0x558ca1a29cc0)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 0)
Ipv4Interface:GetAddress(0x558ca1a29cc0, 0)
Testing address 127.0.0.1 with mask 255.0.0.0
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 0)
Ipv4Interface:GetNAddresses(0x558ca1a29cc0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetAddress(0x558ca1a2b310, 0)
Testing address 10.1.1.2 with mask 255.255.255.0
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol::Send case 3:  passed in with route
Ipv4L3Protocol:BuildHeader(0x558ca1a2a7e0, 10.1.1.2, 10.1.1.1, 17, 108, 64, 0, 1)
Ipv4L3Protocol:GetInterfaceForDevice(0x558ca1a2a7e0, 0x558ca1a242c0)
Ipv4L3Protocol:SendRealOut(0x558ca1a2a7e0, 0x558ca1a346f0, 0x558ca1a34710, 0x7fff39457500)
Ipv4L3Protocol:GetInterfaceForDevice(0x558ca1a2a7e0, 0x558ca1a242c0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Send via NetDevice ifIndex 0 ipv4InterfaceIndex 1
Ipv4Interface:IsUp(0x558ca1a2b310)
Send to destination 10.1.1.1
Ipv4Interface:GetDevice(0x558ca1a2b310)
PointToPointNetDevice:GetMtu(0x558ca1a242c0)
Ipv4Interface:Send(0x558ca1a2b310, , 10.1.1.1)
Ipv4Interface:IsUp(0x558ca1a2b310)
PointToPointNetDevice:NeedsArp(0x558ca1a242c0)
Doesn't need ARP
PointToPointNetDevice:GetBroadcast(0x558ca1a242c0)
TrafficControlLayer:Send(0x558ca1a2bc90, 0x558ca1a242c0, 0x558ca1a32cb0)
Send packet to device 0x558ca1a242c0 protocol number 2048
PointToPointNetDevice:Send(0x558ca1a242c0, 0x558ca1a34710, 02-06-ff:ff:ff:ff:ff:ff, 2048)
PointToPointNetDevice:IsLinkUp(0x558ca1a242c0)
PointToPointNetDevice:AddHeader(0x558ca1a242c0, 0x558ca1a34710, 2048)
PointToPointNetDevice:EtherToPpp()
PointToPointNetDevice:GetMtu(0x558ca1a242c0)
Socket:NotifyDataSent(0x558ca1a2e690, 100)
GameServer:ScheduleDisplay(0x558ca1a2d4e0)
GameServer:Display(0x558ca1a2d4e0)
Next Frame is 0100000000000000100000100000000000010001000010100000000000000000000000000000000110000000000000000100
GameServer:SendFrame(0x558ca1a2d4e0)
GameServer:NextFrame(0x558ca1a2d4e0)
Frame Dimension: 100
Socket:Send(0x558ca1a2e690, 0x558ca1a345a0)
UdpSocketImpl:Send(0x558ca1a2e690, 0x558ca1a345a0, 0)
UdpSocketImpl:DoSend(0x558ca1a2e690, 0x558ca1a345a0)
UdpSocketImpl:DoSendTo(0x558ca1a2e690, 0x558ca1a345a0, 10.1.1.1, 8080, 0)
UdpSocketImpl:GetTxAvailable()
Socket:SocketSetDontFragmentTag(0x7fff39457950)
Socket:Disable(0x7fff39457950)
Socket:GetSerializedSize(0x7fff39457950)
Socket:Serialize(0x7fff39457950, 0x7fff394576c0)
Ipv4L3Protocol:GetRoutingProtocol(0x558ca1a2a7e0)
Ipv4L3Protocol:GetRoutingProtocol(0x558ca1a2a7e0)
Ipv4L3Protocol:SourceAddressSelection(0x558ca1a2a7e0, 1, " ", 10.1.1.0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetAddress(0x558ca1a2b310, 0)
Ipv4L3Protocol:GetNetDevice(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetDevice(0x558ca1a2b310)
Route exists
Ipv4L3Protocol:GetInterfaceForDevice(0x558ca1a2a7e0, 0x558ca1a242c0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetAddress(0x558ca1a2b310, 0)
UdpL4Protocol:Send(0x558ca1a2bb60, 0x558ca1a34780, 10.1.1.2, 10.1.1.1, 49153, 8080, 0x558ca1a348d0)
Ipv4L3Protocol:Send(0x558ca1a2a7e0, 0x558ca1a34780, 10.1.1.2, 10.1.1.1, 17, 0x558ca1a348d0)
Socket:SocketIpTtlTag(0x7fff394574e0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 0)
Ipv4Interface:GetNAddresses(0x558ca1a29cc0)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 0)
Ipv4Interface:GetAddress(0x558ca1a29cc0, 0)
Testing address 127.0.0.1 with mask 255.0.0.0
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 0)
Ipv4Interface:GetNAddresses(0x558ca1a29cc0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetAddress(0x558ca1a2b310, 0)
Testing address 10.1.1.2 with mask 255.255.255.0
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol::Send case 3:  passed in with route
Ipv4L3Protocol:BuildHeader(0x558ca1a2a7e0, 10.1.1.2, 10.1.1.1, 17, 108, 64, 0, 1)
Ipv4L3Protocol:GetInterfaceForDevice(0x558ca1a2a7e0, 0x558ca1a242c0)
Ipv4L3Protocol:SendRealOut(0x558ca1a2a7e0, 0x558ca1a348d0, 0x558ca1a348f0, 0x7fff39457500)
Ipv4L3Protocol:GetInterfaceForDevice(0x558ca1a2a7e0, 0x558ca1a242c0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Send via NetDevice ifIndex 0 ipv4InterfaceIndex 1
Ipv4Interface:IsUp(0x558ca1a2b310)
Send to destination 10.1.1.1
Ipv4Interface:GetDevice(0x558ca1a2b310)
PointToPointNetDevice:GetMtu(0x558ca1a242c0)
Ipv4Interface:Send(0x558ca1a2b310, , 10.1.1.1)
Ipv4Interface:IsUp(0x558ca1a2b310)
PointToPointNetDevice:NeedsArp(0x558ca1a242c0)
Doesn't need ARP
PointToPointNetDevice:GetBroadcast(0x558ca1a242c0)
TrafficControlLayer:Send(0x558ca1a2bc90, 0x558ca1a242c0, 0x558ca1a32cb0)
Send packet to device 0x558ca1a242c0 protocol number 2048
PointToPointNetDevice:Send(0x558ca1a242c0, 0x558ca1a348f0, 02-06-ff:ff:ff:ff:ff:ff, 2048)
PointToPointNetDevice:IsLinkUp(0x558ca1a242c0)
PointToPointNetDevice:AddHeader(0x558ca1a242c0, 0x558ca1a348f0, 2048)
PointToPointNetDevice:EtherToPpp()
PointToPointNetDevice:GetMtu(0x558ca1a242c0)
Socket:NotifyDataSent(0x558ca1a2e690, 100)
GameServer:ScheduleDisplay(0x558ca1a2d4e0)
GameServer:Display(0x558ca1a2d4e0)
Next Frame is 0000000000010000000000000010000010000000000001000100001010000000000000000000000000000000011000000000
GameServer:SendFrame(0x558ca1a2d4e0)
GameServer:NextFrame(0x558ca1a2d4e0)
Frame Dimension: 100
Socket:Send(0x558ca1a2e690, 0x558ca1a34780)
UdpSocketImpl:Send(0x558ca1a2e690, 0x558ca1a34780, 0)
UdpSocketImpl:DoSend(0x558ca1a2e690, 0x558ca1a34780)
UdpSocketImpl:DoSendTo(0x558ca1a2e690, 0x558ca1a34780, 10.1.1.1, 8080, 0)
UdpSocketImpl:GetTxAvailable()
Socket:SocketSetDontFragmentTag(0x7fff39457950)
Socket:Disable(0x7fff39457950)
Socket:GetSerializedSize(0x7fff39457950)
Socket:Serialize(0x7fff39457950, 0x7fff394576c0)
Ipv4L3Protocol:GetRoutingProtocol(0x558ca1a2a7e0)
Ipv4L3Protocol:GetRoutingProtocol(0x558ca1a2a7e0)
Ipv4L3Protocol:SourceAddressSelection(0x558ca1a2a7e0, 1, " ", 10.1.1.0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetAddress(0x558ca1a2b310, 0)
Ipv4L3Protocol:GetNetDevice(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetDevice(0x558ca1a2b310)
Route exists
Ipv4L3Protocol:GetInterfaceForDevice(0x558ca1a2a7e0, 0x558ca1a242c0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetAddress(0x558ca1a2b310, 0)
UdpL4Protocol:Send(0x558ca1a2bb60, 0x558ca1a34960, 10.1.1.2, 10.1.1.1, 49153, 8080, 0x558ca1a34ab0)
Ipv4L3Protocol:Send(0x558ca1a2a7e0, 0x558ca1a34960, 10.1.1.2, 10.1.1.1, 17, 0x558ca1a34ab0)
Socket:SocketIpTtlTag(0x7fff394574e0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 0)
Ipv4Interface:GetNAddresses(0x558ca1a29cc0)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 0)
Ipv4Interface:GetAddress(0x558ca1a29cc0, 0)
Testing address 127.0.0.1 with mask 255.0.0.0
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 0)
Ipv4Interface:GetNAddresses(0x558ca1a29cc0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetAddress(0x558ca1a2b310, 0)
Testing address 10.1.1.2 with mask 255.255.255.0
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol::Send case 3:  passed in with route
Ipv4L3Protocol:BuildHeader(0x558ca1a2a7e0, 10.1.1.2, 10.1.1.1, 17, 108, 64, 0, 1)
Ipv4L3Protocol:GetInterfaceForDevice(0x558ca1a2a7e0, 0x558ca1a242c0)
Ipv4L3Protocol:SendRealOut(0x558ca1a2a7e0, 0x558ca1a34ab0, 0x558ca1a34ad0, 0x7fff39457500)
Ipv4L3Protocol:GetInterfaceForDevice(0x558ca1a2a7e0, 0x558ca1a242c0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Send via NetDevice ifIndex 0 ipv4InterfaceIndex 1
Ipv4Interface:IsUp(0x558ca1a2b310)
Send to destination 10.1.1.1
Ipv4Interface:GetDevice(0x558ca1a2b310)
PointToPointNetDevice:GetMtu(0x558ca1a242c0)
Ipv4Interface:Send(0x558ca1a2b310, , 10.1.1.1)
Ipv4Interface:IsUp(0x558ca1a2b310)
PointToPointNetDevice:NeedsArp(0x558ca1a242c0)
Doesn't need ARP
PointToPointNetDevice:GetBroadcast(0x558ca1a242c0)
TrafficControlLayer:Send(0x558ca1a2bc90, 0x558ca1a242c0, 0x558ca1a32cb0)
Send packet to device 0x558ca1a242c0 protocol number 2048
PointToPointNetDevice:Send(0x558ca1a242c0, 0x558ca1a34ad0, 02-06-ff:ff:ff:ff:ff:ff, 2048)
PointToPointNetDevice:IsLinkUp(0x558ca1a242c0)
PointToPointNetDevice:AddHeader(0x558ca1a242c0, 0x558ca1a34ad0, 2048)
PointToPointNetDevice:EtherToPpp()
PointToPointNetDevice:GetMtu(0x558ca1a242c0)
Socket:NotifyDataSent(0x558ca1a2e690, 100)
GameServer:ScheduleDisplay(0x558ca1a2d4e0)
GameServer:Display(0x558ca1a2d4e0)
Next Frame is 0001010100000000000001000000000000001000001000000000000100010000101000000000000000000000000000000001
GameServer:SendFrame(0x558ca1a2d4e0)
GameServer:NextFrame(0x558ca1a2d4e0)
Frame Dimension: 100
Socket:Send(0x558ca1a2e690, 0x558ca1a34960)
UdpSocketImpl:Send(0x558ca1a2e690, 0x558ca1a34960, 0)
UdpSocketImpl:DoSend(0x558ca1a2e690, 0x558ca1a34960)
UdpSocketImpl:DoSendTo(0x558ca1a2e690, 0x558ca1a34960, 10.1.1.1, 8080, 0)
UdpSocketImpl:GetTxAvailable()
Socket:SocketSetDontFragmentTag(0x7fff39457950)
Socket:Disable(0x7fff39457950)
Socket:GetSerializedSize(0x7fff39457950)
Socket:Serialize(0x7fff39457950, 0x7fff394576c0)
Ipv4L3Protocol:GetRoutingProtocol(0x558ca1a2a7e0)
Ipv4L3Protocol:GetRoutingProtocol(0x558ca1a2a7e0)
Ipv4L3Protocol:SourceAddressSelection(0x558ca1a2a7e0, 1, " ", 10.1.1.0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetAddress(0x558ca1a2b310, 0)
Ipv4L3Protocol:GetNetDevice(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetDevice(0x558ca1a2b310)
Route exists
Ipv4L3Protocol:GetInterfaceForDevice(0x558ca1a2a7e0, 0x558ca1a242c0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetAddress(0x558ca1a2b310, 0)
UdpL4Protocol:Send(0x558ca1a2bb60, 0x558ca1a34b40, 10.1.1.2, 10.1.1.1, 49153, 8080, 0x558ca1a34c90)
Ipv4L3Protocol:Send(0x558ca1a2a7e0, 0x558ca1a34b40, 10.1.1.2, 10.1.1.1, 17, 0x558ca1a34c90)
Socket:SocketIpTtlTag(0x7fff394574e0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 0)
Ipv4Interface:GetNAddresses(0x558ca1a29cc0)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 0)
Ipv4Interface:GetAddress(0x558ca1a29cc0, 0)
Testing address 127.0.0.1 with mask 255.0.0.0
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 0)
Ipv4Interface:GetNAddresses(0x558ca1a29cc0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetAddress(0x558ca1a2b310, 0)
Testing address 10.1.1.2 with mask 255.255.255.0
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol::Send case 3:  passed in with route
Ipv4L3Protocol:BuildHeader(0x558ca1a2a7e0, 10.1.1.2, 10.1.1.1, 17, 108, 64, 0, 1)
Ipv4L3Protocol:GetInterfaceForDevice(0x558ca1a2a7e0, 0x558ca1a242c0)
Ipv4L3Protocol:SendRealOut(0x558ca1a2a7e0, 0x558ca1a34c90, 0x558ca1a34cb0, 0x7fff39457500)
Ipv4L3Protocol:GetInterfaceForDevice(0x558ca1a2a7e0, 0x558ca1a242c0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Send via NetDevice ifIndex 0 ipv4InterfaceIndex 1
Ipv4Interface:IsUp(0x558ca1a2b310)
Send to destination 10.1.1.1
Ipv4Interface:GetDevice(0x558ca1a2b310)
PointToPointNetDevice:GetMtu(0x558ca1a242c0)
Ipv4Interface:Send(0x558ca1a2b310, , 10.1.1.1)
Ipv4Interface:IsUp(0x558ca1a2b310)
PointToPointNetDevice:NeedsArp(0x558ca1a242c0)
Doesn't need ARP
PointToPointNetDevice:GetBroadcast(0x558ca1a242c0)
TrafficControlLayer:Send(0x558ca1a2bc90, 0x558ca1a242c0, 0x558ca1a32cb0)
Send packet to device 0x558ca1a242c0 protocol number 2048
PointToPointNetDevice:Send(0x558ca1a242c0, 0x558ca1a34cb0, 02-06-ff:ff:ff:ff:ff:ff, 2048)
PointToPointNetDevice:IsLinkUp(0x558ca1a242c0)
PointToPointNetDevice:AddHeader(0x558ca1a242c0, 0x558ca1a34cb0, 2048)
PointToPointNetDevice:EtherToPpp()
PointToPointNetDevice:GetMtu(0x558ca1a242c0)
Socket:NotifyDataSent(0x558ca1a2e690, 100)
GameServer:ScheduleDisplay(0x558ca1a2d4e0)
GameServer:Display(0x558ca1a2d4e0)
Next Frame is 0000000010000101010000000000000100000000000000100000100000000000010001000010100000000000000000000000
GameServer:SendFrame(0x558ca1a2d4e0)
GameServer:NextFrame(0x558ca1a2d4e0)
Frame Dimension: 100
Socket:Send(0x558ca1a2e690, 0x558ca1a34b40)
UdpSocketImpl:Send(0x558ca1a2e690, 0x558ca1a34b40, 0)
UdpSocketImpl:DoSend(0x558ca1a2e690, 0x558ca1a34b40)
UdpSocketImpl:DoSendTo(0x558ca1a2e690, 0x558ca1a34b40, 10.1.1.1, 8080, 0)
UdpSocketImpl:GetTxAvailable()
Socket:SocketSetDontFragmentTag(0x7fff39457950)
Socket:Disable(0x7fff39457950)
Socket:GetSerializedSize(0x7fff39457950)
Socket:Serialize(0x7fff39457950, 0x7fff394576c0)
Ipv4L3Protocol:GetRoutingProtocol(0x558ca1a2a7e0)
Ipv4L3Protocol:GetRoutingProtocol(0x558ca1a2a7e0)
Ipv4L3Protocol:SourceAddressSelection(0x558ca1a2a7e0, 1, " ", 10.1.1.0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetAddress(0x558ca1a2b310, 0)
Ipv4L3Protocol:GetNetDevice(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetDevice(0x558ca1a2b310)
Route exists
Ipv4L3Protocol:GetInterfaceForDevice(0x558ca1a2a7e0, 0x558ca1a242c0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetAddress(0x558ca1a2b310, 0)
UdpL4Protocol:Send(0x558ca1a2bb60, 0x558ca1a34d20, 10.1.1.2, 10.1.1.1, 49153, 8080, 0x558ca1a34e70)
Ipv4L3Protocol:Send(0x558ca1a2a7e0, 0x558ca1a34d20, 10.1.1.2, 10.1.1.1, 17, 0x558ca1a34e70)
Socket:SocketIpTtlTag(0x7fff394574e0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 0)
Ipv4Interface:GetNAddresses(0x558ca1a29cc0)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 0)
Ipv4Interface:GetAddress(0x558ca1a29cc0, 0)
Testing address 127.0.0.1 with mask 255.0.0.0
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 0)
Ipv4Interface:GetNAddresses(0x558ca1a29cc0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetAddress(0x558ca1a2b310, 0)
Testing address 10.1.1.2 with mask 255.255.255.0
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol::Send case 3:  passed in with route
Ipv4L3Protocol:BuildHeader(0x558ca1a2a7e0, 10.1.1.2, 10.1.1.1, 17, 108, 64, 0, 1)
Ipv4L3Protocol:GetInterfaceForDevice(0x558ca1a2a7e0, 0x558ca1a242c0)
Ipv4L3Protocol:SendRealOut(0x558ca1a2a7e0, 0x558ca1a34e70, 0x558ca1a34e90, 0x7fff39457500)
Ipv4L3Protocol:GetInterfaceForDevice(0x558ca1a2a7e0, 0x558ca1a242c0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Send via NetDevice ifIndex 0 ipv4InterfaceIndex 1
Ipv4Interface:IsUp(0x558ca1a2b310)
Send to destination 10.1.1.1
Ipv4Interface:GetDevice(0x558ca1a2b310)
PointToPointNetDevice:GetMtu(0x558ca1a242c0)
Ipv4Interface:Send(0x558ca1a2b310, , 10.1.1.1)
Ipv4Interface:IsUp(0x558ca1a2b310)
PointToPointNetDevice:NeedsArp(0x558ca1a242c0)
Doesn't need ARP
PointToPointNetDevice:GetBroadcast(0x558ca1a242c0)
TrafficControlLayer:Send(0x558ca1a2bc90, 0x558ca1a242c0, 0x558ca1a32cb0)
Send packet to device 0x558ca1a242c0 protocol number 2048
PointToPointNetDevice:Send(0x558ca1a242c0, 0x558ca1a34e90, 02-06-ff:ff:ff:ff:ff:ff, 2048)
PointToPointNetDevice:IsLinkUp(0x558ca1a242c0)
PointToPointNetDevice:AddHeader(0x558ca1a242c0, 0x558ca1a34e90, 2048)
PointToPointNetDevice:EtherToPpp()
PointToPointNetDevice:GetMtu(0x558ca1a242c0)
Socket:NotifyDataSent(0x558ca1a2e690, 100)
GameServer:ScheduleDisplay(0x558ca1a2d4e0)
GameServer:Display(0x558ca1a2d4e0)
Next Frame is 1000010001000000001000010101000000000000010000000000000010000010000000000001000100001010000000000000
GameServer:SendFrame(0x558ca1a2d4e0)
GameServer:NextFrame(0x558ca1a2d4e0)
Frame Dimension: 100
Socket:Send(0x558ca1a2e690, 0x558ca1a34d20)
UdpSocketImpl:Send(0x558ca1a2e690, 0x558ca1a34d20, 0)
UdpSocketImpl:DoSend(0x558ca1a2e690, 0x558ca1a34d20)
UdpSocketImpl:DoSendTo(0x558ca1a2e690, 0x558ca1a34d20, 10.1.1.1, 8080, 0)
UdpSocketImpl:GetTxAvailable()
Socket:SocketSetDontFragmentTag(0x7fff39457950)
Socket:Disable(0x7fff39457950)
Socket:GetSerializedSize(0x7fff39457950)
Socket:Serialize(0x7fff39457950, 0x7fff394576c0)
Ipv4L3Protocol:GetRoutingProtocol(0x558ca1a2a7e0)
Ipv4L3Protocol:GetRoutingProtocol(0x558ca1a2a7e0)
Ipv4L3Protocol:SourceAddressSelection(0x558ca1a2a7e0, 1, " ", 10.1.1.0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetAddress(0x558ca1a2b310, 0)
Ipv4L3Protocol:GetNetDevice(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetDevice(0x558ca1a2b310)
Route exists
Ipv4L3Protocol:GetInterfaceForDevice(0x558ca1a2a7e0, 0x558ca1a242c0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetAddress(0x558ca1a2b310, 0)
UdpL4Protocol:Send(0x558ca1a2bb60, 0x558ca1a34f00, 10.1.1.2, 10.1.1.1, 49153, 8080, 0x558ca1a35050)
Ipv4L3Protocol:Send(0x558ca1a2a7e0, 0x558ca1a34f00, 10.1.1.2, 10.1.1.1, 17, 0x558ca1a35050)
Socket:SocketIpTtlTag(0x7fff394574e0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 0)
Ipv4Interface:GetNAddresses(0x558ca1a29cc0)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 0)
Ipv4Interface:GetAddress(0x558ca1a29cc0, 0)
Testing address 127.0.0.1 with mask 255.0.0.0
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 0)
Ipv4Interface:GetNAddresses(0x558ca1a29cc0)
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol:GetAddress(0x558ca1a2a7e0, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetAddress(0x558ca1a2b310, 0)
Testing address 10.1.1.2 with mask 255.255.255.0
Ipv4L3Protocol:GetNAddresses(0x558ca1a2a7e0, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b310)
Ipv4L3Protocol::Send case 3:  passed in with route
Ipv4L3Protocol:BuildHeader(0x558ca1a2a7e0, 10.1.1.2, 10.1.1.1, 17, 108, 64, 0, 1)
Ipv4L3Protocol:GetInterfaceForDevice(0x558ca1a2a7e0, 0x558ca1a242c0)
Ipv4L3Protocol:SendRealOut(0x558ca1a2a7e0, 0x558ca1a35050, 0x558ca1a35070, 0x7fff39457500)
Ipv4L3Protocol:GetInterfaceForDevice(0x558ca1a2a7e0, 0x558ca1a242c0)
Ipv4L3Protocol:GetInterface(0x558ca1a2a7e0, 1)
Send via NetDevice ifIndex 0 ipv4InterfaceIndex 1
Ipv4Interface:IsUp(0x558ca1a2b310)
Send to destination 10.1.1.1
Ipv4Interface:GetDevice(0x558ca1a2b310)
PointToPointNetDevice:GetMtu(0x558ca1a242c0)
Ipv4Interface:Send(0x558ca1a2b310, , 10.1.1.1)
Ipv4Interface:IsUp(0x558ca1a2b310)
PointToPointNetDevice:NeedsArp(0x558ca1a242c0)
Doesn't need ARP
PointToPointNetDevice:GetBroadcast(0x558ca1a242c0)
TrafficControlLayer:Send(0x558ca1a2bc90, 0x558ca1a242c0, 0x558ca1a32cb0)
Send packet to device 0x558ca1a242c0 protocol number 2048
PointToPointNetDevice:Send(0x558ca1a242c0, 0x558ca1a35070, 02-06-ff:ff:ff:ff:ff:ff, 2048)
PointToPointNetDevice:IsLinkUp(0x558ca1a242c0)
PointToPointNetDevice:AddHeader(0x558ca1a242c0, 0x558ca1a35070, 2048)
PointToPointNetDevice:EtherToPpp()
PointToPointNetDevice:GetMtu(0x558ca1a242c0)
Socket:NotifyDataSent(0x558ca1a2e690, 100)
GameServer:ScheduleDisplay(0x558ca1a2d4e0)
PointToPointNetDevice:TransmitComplete(0x558ca1a242c0)
PointToPointNetDevice:GetMtu(0x558ca1a242c0)
PointToPointNetDevice:TransmitStart(0x558ca1a242c0, 0x558ca1a942e0)
PointToPointChannel:TransmitStart(0x558ca1a3c780, 0x558ca1a942e0, 0x558ca1a242c0)
PointToPointNetDevice:Receive(0x558ca1a24000, 0x558ca1a544d0)
PointToPointNetDevice:ProcessHeader(0x558ca1a24000, 0x558ca1a544d0, 0)
PointToPointNetDevice:PppToEther()
PointToPointNetDevice:GetRemote(0x558ca1a24000)
PointToPointChannel:GetNDevices()
PointToPointChannel:GetNDevices()
PointToPointChannel:GetDevice()
PointToPointChannel:GetPointToPointDevice()
PointToPointChannel:GetNDevices()
PointToPointChannel:GetDevice()
PointToPointChannel:GetPointToPointDevice()
TrafficControlLayer:Receive(0x558ca1a29fa0, 0x558ca1a24000, 0x558ca1a544d0, 2048, 02-06-00:00:00:00:00:02, 02-06-00:00:00:00:00:01, 0)
Found handler for packet 0x558ca1a544d0, protocol 2048 and NetDevice 0x558ca1a24000. Send packet up
Ipv4L3Protocol:Receive(0x558ca1a28e00, 0x558ca1a24000, 0x558ca1a544d0, 2048, 02-06-00:00:00:00:00:02, 02-06-00:00:00:00:00:01, 0)
Packet from 02-06-00:00:00:00:00:02 received on node 0
Ipv4L3Protocol:GetInterfaceForDevice(0x558ca1a28e00, 0x558ca1a24000)
Ipv4Interface:IsUp(0x558ca1a2b8d0)
Ipv4Interface:GetArpCache(0x558ca1a2b8d0)
Ipv4L3Protocol:GetInterfaceForDevice(0x558ca1a28e00, 0x558ca1a24000)
Ipv4L3Protocol:GetInterfaceForDevice(0x558ca1a28e00, 0x558ca1a24000)
Ipv4L3Protocol:IsDestinationAddress(0x558ca1a28e00, 10.1.1.1, 1)
Ipv4L3Protocol:GetNAddresses(0x558ca1a28e00, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a28e00, 1)
Ipv4Interface:GetNAddresses(0x558ca1a2b8d0)
Ipv4L3Protocol:GetAddress(0x558ca1a28e00, 1, 0)
Ipv4L3Protocol:GetInterface(0x558ca1a28e00, 1)
Ipv4Interface:GetAddress(0x558ca1a2b8d0, 0)
For me (destination 10.1.1.1 match)
Ipv4L3Protocol:LocalDeliver(0x558ca1a28e00, 0x558ca1a2d160, 0x7fff394574f0, 1)
Ipv4L3Protocol:GetProtocol(0x558ca1a28e00, 17, 1)
Ipv4L3Protocol:GetInterface(0x558ca1a28e00, 1)
UdpL4Protocol:Receive(0x558ca1a91900, 0x558ca1a34f00, tos 0x0 DSCP Default ECN Not-ECT ttl 64 id 0 protocol 17 offset (bytes) 0 flags [none] length: 128 10.1.1.2 > 10.1.1.1)
Looking up dst 10.1.1.1 port 8080
UdpSocketImpl:ForwardUp(0x558ca1a2e4d0, 0x558ca1a35270, tos 0x0 DSCP Default ECN Not-ECT ttl 64 id 0 protocol 17 offset (bytes) 0 flags [none] length: 128 10.1.1.2 > 10.1.1.1, 49153)
Socket:IsRecvPktInfo(0x558ca1a2e4d0)
Socket:NotifyDataRecv(0x558ca1a2e4d0)
GameUser:computeResponse(0x558ca19d9900)
Command ['/root/NetProject/ns-allinone-3.29/ns-3.29/build/scratch/test'] terminated with signal SIGSEGV. Run it under a debugger to get more information (./waf --run <program> --command-template="gdb --args %s <args>").
